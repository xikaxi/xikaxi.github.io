<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>第一篇</title>
    <link href="/2021/03/06/dm_final/"/>
    <url>/2021/03/06/dm_final/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本课件根据 左孝凌、李为鑑、刘永才 编著的 《离散数学》 (上海科学技术文献出版社) 制作</p><h1 id="第一篇-数理逻辑"><a href="#第一篇-数理逻辑" class="headerlink" title="第一篇 数理逻辑"></a>第一篇 数理逻辑</h1><p><strong>逻辑学是一门研究思维形式及思维规律的科学。逻辑规律就是客观事物在人的主观意识中的反映。</strong></p><p><strong>逻辑学分为辩证逻辑与形式逻辑两种，前者是以辩证法认识论的世界观为基础的逻辑学，而后者主要是对思维的形式结构和规律进行研究的类似于语法的一门工具性学科。思维的形式结构包括了概念、判断和推理之间的结构和连系，其中概念是思维的基本单位，通过概念对事物是否具有某种属性进行肯定或否定的回答，这就是判断；由一个或几个判断推出另一个判断的思维形式，就是推理。研究推理有很多方法，用数学方法来研究推理的规律称为数理逻辑。这里所指的数学方法，就是引进一套符号体系的方法，所以数理逻辑又称作符号逻辑，它是从量的侧面来研究思维规律的。</strong></p><p><strong>现代数理逻辑课分为证明论、模型论、递归函数论、公理化集合论等，这里介绍的是数理逻辑最基本的内容：命题逻辑和谓词逻辑。</strong></p><h2 id="第一章-命题逻辑"><a href="#第一章-命题逻辑" class="headerlink" title="第一章 命题逻辑"></a>第一章 命题逻辑</h2><h3 id="1-1-命题及其表示法"><a href="#1-1-命题及其表示法" class="headerlink" title="1-1 命题及其表示法"></a>1-1 命题及其表示法</h3><h4 id="1-概念"><a href="#1-概念" class="headerlink" title="(1) 概念"></a>(1) 概念</h4><p><strong>命题：描述客观事实，并且可以确定真假的陈述句。</strong></p><p><strong>真值：我们通常用 “真”或”假”，“$T$” 或 “$F$” 表示命题的真值。</strong></p><ol><li><p>黄启明今年21岁。 (真/$True$/$T$)  真命题</p></li><li><p>黄启明今年100岁。(假/$False$/$F$)  假命题</p></li></ol><p>观察下面的命题：</p><p>一年有365天。 ($T$)</p><p>一年有14个月。($F$)</p><p>一周有7天。 ($T$)</p><p>身份证有20位。($F$)</p><p>我正在说谎。 (悖论，不能确定真假，不是一个命题)</p><p>请给我一杯咖啡。  (祈使句，没有描述一个客观事实，没有确定真假可言，不是一个命题)</p><p>宇宙中存在外星人。(是一个命题, 虽然现在不能确认，但是未来某一天，我们必定可以确定它的真值 )</p><h4 id="2-命题的表示"><a href="#2-命题的表示" class="headerlink" title="(2) 命题的表示"></a>(2) 命题的表示</h4><p><strong>在数理逻辑中，我们将使用大写字母 $A, B, …, P, Q, …, X, Y, Z$ 或用带下标的大写字母或用数字，如 $A_i, [1], [2]$ 等表示命题</strong>，例如：<br>$$<br>P: 今天下雨。<br>$$<br><strong>$P$ 可以表示 “今天下雨” 这个命题的名</strong>。也可以用数字表示命题 , 例如<br>$$<br>[1]: 今天下雨<br>$$</p><h4 id="3-命题常量"><a href="#3-命题常量" class="headerlink" title="(3) 命题常量"></a>(3) 命题常量</h4><p><strong>一个命题标识符如果表示确定的命题，就称为命题常量。</strong></p><h4 id="4-命题变元"><a href="#4-命题变元" class="headerlink" title="(4) 命题变元"></a>(4) 命题变元</h4><p><strong>如果命题标识符只表示任意命题的位置标志，就称为命题变元。</strong></p><p><em>因为命题变元可以表示任意命题，所以它不能确定真值</em></p><h4 id="5-命题的指派"><a href="#5-命题的指派" class="headerlink" title="(5) 命题的指派"></a>(5) 命题的指派</h4><p><strong>当对命题变元 $P$ 用一个特定的命题取代的时候，能确定其真值，这个过程，称为对这个命题变元进行指派。</strong></p><h4 id="6-命题的类型"><a href="#6-命题的类型" class="headerlink" title="(6) 命题的类型"></a>(6) 命题的类型</h4><p><strong>原子命题：不能再拆分成更小命题的命题，称为原子命题。</strong></p><p><strong>复合命题：由逻辑联结词，标点符号和原子命题复合构成的命题，称作复合命题。</strong></p><h3 id="1-2-联结词"><a href="#1-2-联结词" class="headerlink" title="1-2 联结词"></a>1-2 联结词</h3><h4 id="1-否定"><a href="#1-否定" class="headerlink" title="(1) 否定"></a>(1) 否定</h4><p><strong>定义 设 $P$ 为一个命题，$P$ 的否定是一个新的命题，记作 $\neg P$ 。若  $P$ 为 $T$ ，$\neg P$ 为 $F$ ；若 $P$ 为 $F$ ，$\neg P$ 为 $T$  。联结词 “$\neg$” 表示命题的否定。</strong></p><p><em>真值表：</em></p><table><thead><tr><th>$P$</th><th>$\neg P$</th></tr></thead><tbody><tr><td>$T$</td><td>$F$</td></tr><tr><td>$F$</td><td>$T$</td></tr></tbody></table><p>$P$: 黄启明今年21岁。 (T)</p><p>$\neg P$ ： 黄启明今年没有21岁。 (F)</p><h4 id="2-合取"><a href="#2-合取" class="headerlink" title="(2) 合取"></a>(2) 合取</h4><p><strong>定义 两个命题 $P$ 和 $Q$ 的合取是一个复合命题，记作  $ P \wedge Q$ 。当且仅当 $P$ ，$Q$ 同时为 $T$ 时，$P \wedge Q$ 为 $T$ ，在其他情况下，$P \wedge Q$ 的真值都是 $F$。</strong></p><p><em>真值表：</em></p><table><thead><tr><th>$P$</th><th>$Q$</th><th>$P \wedge Q$</th></tr></thead><tbody><tr><td>$T$</td><td>$T$</td><td>$T$</td></tr><tr><td>$T$</td><td>$F$</td><td>$F$</td></tr><tr><td>$F$</td><td>$T$</td><td>$F$</td></tr><tr><td>$F$</td><td>$F$</td><td>$F$</td></tr></tbody></table><p>例:</p><p>$P$ : 一年有365天。 ($T$)</p><p>$Q$ : 太阳从东边升起。 ($T$)</p><p>$P \wedge Q$ 为 $T$ 。</p><h4 id="3-析取"><a href="#3-析取" class="headerlink" title="(3) 析取"></a>(3) 析取</h4><p><strong>定义 两个命题 $P$ 和 $Q$ 的析取是一个复合命题，记作 $P \vee Q$ 。当且仅当 $P$, $Q$ 同时为 $F$ 时，$P \vee Q$ 的真值为 $F$ ，否则 $P \vee Q$ 的真值为 $T$ 。</strong> </p><p><em>真值表：</em></p><table><thead><tr><th>$P$</th><th>$Q$</th><th>$P \vee Q$</th></tr></thead><tbody><tr><td>$T$</td><td>$T$</td><td>$T$</td></tr><tr><td>$T$</td><td>$F$</td><td>$T$</td></tr><tr><td>$F$</td><td>$T$</td><td>$T$</td></tr><tr><td>$F$</td><td>$F$</td><td>$F$</td></tr></tbody></table><h4 id="4-条件"><a href="#4-条件" class="headerlink" title="(4) 条件"></a>(4) 条件</h4><p><strong>定义 给定两个命题 $P$ 和 $Q$ , 其条件命题是一个复合命题, 记作 $P \rightarrow Q$ , 读作 “如果 $P$, 那么 $Q$” 或 “若 $P$”则 “$Q$”。当且仅当$P$ 的真值为 $T$ ，$Q$ 的值为 $F$ 时，$P \rightarrow Q$ 的真值为 $F$, 否则 $P \rightarrow Q$ 的真值为 $T$ 。我们称 $P$ 为前件，$Q$ 为后件。</strong></p><table><thead><tr><th>$P$</th><th>$Q$</th><th>$P \rightarrow Q$</th></tr></thead><tbody><tr><td>$T$</td><td>$T$</td><td>$T$</td></tr><tr><td>$T$</td><td>$F$</td><td>$F$</td></tr><tr><td>$F$</td><td>$T$</td><td>$T$</td></tr><tr><td>$F$</td><td>$F$</td><td>$T$</td></tr></tbody></table><h4 id="5-双条件"><a href="#5-双条件" class="headerlink" title="(5)双条件"></a>(5)双条件</h4><p><strong>定义 给定两个命题 $P$ 和 $Q$ ，其复合命题 $P \leftrightarrow Q$ 称作双条件命题，读作 “$P$ 当且仅当 $Q$”，当 $P$ 和 $Q$ 的真值相同时，$P \leftrightarrow Q$ 的真值为 $T$，否则 $P \leftrightarrow Q$ 的真值为 $F$。</strong></p><p><em>真值表：</em></p><table><thead><tr><th>$P$</th><th>$Q$</th><th>$P \leftrightarrow Q$</th></tr></thead><tbody><tr><td>$T$</td><td>$T$</td><td>$T$</td></tr><tr><td>$T$</td><td>$F$</td><td>$F$</td></tr><tr><td>$F$</td><td>$T$</td><td>$F$</td></tr><tr><td>$F$</td><td>$F$</td><td>$T$</td></tr></tbody></table><h3 id="1-3-命题公式与翻译"><a href="#1-3-命题公式与翻译" class="headerlink" title="1-3 命题公式与翻译"></a>1-3 命题公式与翻译</h3><p><strong>定义 命题演算的合式公式，规定为:</strong></p><p><em>(1)单个命题变元本身是一个合式公式。</em></p><p><em>(2)如果$A$ 是一个合式公式，那么$\neg A$ 也是一个合式公式。</em></p><p><em>(3)如果 $A$ 和 $B$ 是合式公式，那么 ($A \wedge B$)，($A \vee B$)，($A \rightarrow B$ )和 ($<em>A \leftrightarrow B</em>$) 都是合式公式。</em></p><p><em>(4)当且仅当能够有限次地运用(1)，(2)，(3)所得到地包含命题变元，联结词和括号地符号串是合式公式。</em></p><p><strong>联结词优先级:</strong></p><p>$\neg &gt; \wedge &gt; \vee &gt; \rightarrow &gt; \leftrightarrow$</p><p>练习，将下面的语句以符号地形式写出来:</p><ol><li>他既聪明又用功。</li><li>他虽然聪明但是不用功。</li><li>除非你努力，否则你将会失败。</li></ol><ol><li><p> $P$ : 他聪明   $Q$: 他很用功  $ P \wedge Q$</p></li><li><p>$P$：他聪明   $Q$: 他用功    $P \wedge \neg Q$</p></li><li><p>$P$：你努力   $Q$: 你将会失败  $\neg P \rightarrow Q$</p></li></ol><p>如果..那么,  除非…否则，当…那么…</p><h3 id="1-4-真值表与等价公式"><a href="#1-4-真值表与等价公式" class="headerlink" title="1-4 真值表与等价公式"></a>1-4 真值表与等价公式</h3><p><strong>定义 在命题公式中，对于分量指派真值地各种可能组合，就确定了这个命题公式地各种真值情况，把它们汇列称表，就是命题公式地真值表。</strong></p><p>练习, 列出 $\neg P \vee Q$</p><table><thead><tr><th>$P$</th><th>$Q$</th><th>$\neg P$</th><th>$\neg P \vee Q$</th></tr></thead><tbody><tr><td>$T$</td><td>$T$</td><td>$F$</td><td>$T$</td></tr><tr><td>$T$</td><td>$F$</td><td>$F$</td><td>$F$</td></tr><tr><td>$F$</td><td>$T$</td><td>$T$</td><td>$T$</td></tr><tr><td>$F$</td><td>$F$</td><td>$T$</td><td>$T$</td></tr></tbody></table><p>观察上面这个真值表，发现：</p><p>$P \rightarrow Q 的真值表和 \neg P \vee Q 一样$</p><p>就可以说这两个命题公式是等价的，或者说它们逻辑相等。</p><p>练习：</p><p>$(P \rightarrow Q) \wedge (Q \rightarrow P) \Leftrightarrow P \leftrightarrow Q$ </p><p><em>常用的命题公式真值表:</em></p><table><thead><tr><th>命题定律</th><th>表达式</th><th>序号</th></tr></thead><tbody><tr><td>对和律</td><td>$\neg \neg P \Leftrightarrow P$</td><td>1</td></tr><tr><td>幂等律</td><td>$P \vee P \Leftrightarrow P, P \wedge P \Leftrightarrow P$</td><td>2</td></tr><tr><td>结合律</td><td>$(P \vee Q)\vee R \Leftrightarrow P \vee (Q \vee R), (P \wedge Q)\wedge R \Leftrightarrow P \wedge (Q \wedge R)$</td><td>3</td></tr><tr><td>交换律</td><td>$P \vee Q \Leftrightarrow Q \vee P, P \wedge Q \Leftrightarrow Q \wedge P$</td><td>4</td></tr><tr><td>分配律</td><td>$P \vee (Q \wedge R) \Leftrightarrow (P \vee Q) \wedge (P \vee R), P \wedge (Q \vee R) \Leftrightarrow (P \wedge Q) \vee (P \wedge R)$</td><td>5</td></tr><tr><td>吸收率</td><td>$P \vee (P \wedge Q) \Leftrightarrow P, P \wedge (Q \vee R) \Leftrightarrow P$</td><td>6</td></tr><tr><td>德摩根律</td><td>$\neg (P \vee Q) \Leftrightarrow \neg P \wedge \neg Q, \neg (P \wedge Q) \Leftrightarrow \neg P \vee \neg Q$</td><td>7</td></tr><tr><td>同一律</td><td>$P \vee F \Leftrightarrow P, P \wedge T \Leftrightarrow P$</td><td>8</td></tr><tr><td>零律</td><td>$P \vee T \Leftrightarrow T, P \wedge F \Leftrightarrow F$</td><td>9</td></tr><tr><td>否定率</td><td>$P \vee \neg P \Leftrightarrow T, P \wedge \neg P \Leftrightarrow F$</td><td>10</td></tr><tr><td>*</td><td>$P \rightarrow Q \Leftrightarrow \neg P \vee Q$</td><td>11</td></tr><tr><td>*</td><td>$P \leftrightarrow Q \Leftrightarrow (P \rightarrow Q)\wedge (Q \rightarrow P)$</td><td></td></tr></tbody></table><p>练习， 证明下列等价式：</p><ol><li><p>$A \rightarrow (B \rightarrow A) \Leftrightarrow \neg A \rightarrow (A \rightarrow \neg B)$</p></li><li><p>$\neg (A \leftrightarrow B) \Leftrightarrow (A \vee B) \wedge \neg(A \wedge B)$</p></li><li><p>$\neg (A \rightarrow B) \Leftrightarrow A \wedge \neg B$</p></li><li><p>$\neg (A \leftrightarrow B) \Leftrightarrow (A \wedge \neg B) \vee (\neg A \wedge B)$</p></li></ol><h3 id="1-5-重言式与蕴含式"><a href="#1-5-重言式与蕴含式" class="headerlink" title="1-5 重言式与蕴含式"></a>1-5 重言式与蕴含式</h3><p><strong>回顾前面的学习，从真值表和命题的等价公式推证中可以看到，有些命题公式，无论对其分量作任何指派，其对应的真值都为 $T$ 或 $F$ 。</strong></p><p><strong>现在来研究一下这两种命题公式。</strong></p><p>要注意深刻理解下面三个名词的含义：</p><ul><li><p>定义</p></li><li><p>定理</p></li><li><p>公理</p></li></ul><h4 id="1-重言式-永真公式-，矛盾式-永假公式"><a href="#1-重言式-永真公式-，矛盾式-永假公式" class="headerlink" title="(1) 重言式(永真公式)，矛盾式(永假公式)"></a>(1) 重言式(永真公式)，矛盾式(永假公式)</h4><p><strong>定义 1-5.1 给定一个命题公式，若无论对分量作怎样的指派，其对应的真值永为 $T$ ，则称该命题公式为重言式或永真公式。</strong></p><p><strong>定义 1-5.2 给定一个命题公式，若无论对分量作怎样的指派，其对应的真值永为 $F$ ，则称该命题公式为矛盾式或永假公式。</strong></p><hr><p><strong>定理 1-5.1 任何两个重言式的合取或析取，仍然是一个重言式。</strong></p><p>定理 1-5.1 的证明：</p><p><em>设 $A$ 和 $B$ 为两个重言式，则不论 $A$ 和 $B$ 的分量指派任何真值，总有 $A$ 为 $T$ ，$B$ 为 $T$ ，故 $A \wedge B \Leftrightarrow T$ 。</em></p><hr><p><strong>定理 1-5.2 一个重言式，对同一分量都用任何合式公式置换，其结果仍为一重言式。</strong></p><p>定理 1-5.2 的 证明：</p><p><em>由于重言式的真值与分量的指派无关，故对同一个分量以任何合式公式置换后，重言式的真值仍为 $T$ 。</em></p><p>例题 1 证明 $((P \vee S) \wedge R) \vee \neg((P \vee S) \wedge R)$ 为重言式。</p><p>证明：</p><p><em>因为 $P \vee \neg P \Leftrightarrow T$ ，如以 $((P \vee S) \wedge R)$ 置换 $P$ 即得 $((P \vee S) \wedge R) \vee \neg((P \vee S) \wedge R) \Leftrightarrow T$</em> </p><hr><p><strong>定理 1-5.3 设 $A$ ，$B$ ，为两个命题公式，$A \Leftrightarrow B$ 当且仅当 $A \leftrightarrow B$ 为一个重言式。</strong></p><p>定理 1-5.3 的证明:</p><p><em>若 $A \Leftrightarrow B$ ，则 $A$ ，$B$ 有相同真值，即 $A \leftrightarrow B$ 永为 $T$ 。</em></p><p><em>若 $A \leftrightarrow B$ 为重言式，则 $A \leftrightarrow B$ 永为 $T$ ，故 $A$ ，$B$ 的真值相同，即 $A \Leftrightarrow B$ 。</em></p><p>例题 2 证明 $\neg(P \wedge Q) \Leftrightarrow (\neg P \vee \neg Q)$</p><h4 id="2-蕴含式"><a href="#2-蕴含式" class="headerlink" title="(2) 蕴含式"></a>(2) 蕴含式</h4><p>接下来我们讨论一下 $A \rightarrow B$ 的重言式。</p><p><strong>定义 1-5.3 当且仅当 $P \rightarrow Q$ 是一个重言式时，我们称 “ $P$ 蕴含 $Q$ ”，并记作 $P \Rightarrow Q$ (不是一个命题公式)。</strong></p><p>因为 $P \rightarrow Q$ 不是对称的，即 $P \rightarrow Q$ 与 $Q \rightarrow P$ 不等价，对 $P \rightarrow Q$ 来说，$Q \rightarrow P$ 称作它的逆换式； $\neg P \rightarrow \neg Q$ 称为它的反换式；</p><p>$\neg Q \rightarrow \neg P $ 称它的逆反式，它们之间的关系：</p><table><thead><tr><th>$P$</th><th>$Q$</th><th>$\neg P$</th><th>$\neg Q$</th><th>$P \rightarrow Q$</th><th>$\neg Q \rightarrow \neg P$</th><th>$Q \rightarrow P$</th><th>$\neg P \rightarrow \neg Q$</th></tr></thead><tbody><tr><td>$T$</td><td>$T$</td><td>$F$</td><td>$F$</td><td>$T$</td><td>$T$</td><td>$T$</td><td>$T$</td></tr><tr><td>$T$</td><td>$F$</td><td>$F$</td><td>$T$</td><td>$F$</td><td>$F$</td><td>$T$</td><td>$T$</td></tr><tr><td>$F$</td><td>$T$</td><td>$T$</td><td>$F$</td><td>$T$</td><td>$T$</td><td>$F$</td><td>$F$</td></tr><tr><td>$F$</td><td>$F$</td><td>$T$</td><td>$T$</td><td>$T$</td><td>$T$</td><td>$T$</td><td>$T$</td></tr></tbody></table><p>从表中看出：<br>$$<br>\begin{align}<br>&amp; (P \rightarrow Q) \Leftrightarrow (\neg Q \rightarrow \neg P) \<br>&amp; (Q \rightarrow P) \Leftrightarrow (\neg P \rightarrow \neg Q)<br>\end{align}<br>$$</p><p>因此要证明 $P \Rightarrow Q$ ，只需要证明 $\neg Q \Rightarrow \neg P$ ，反之亦然。</p><p>要证 $P \Rightarrow Q$ ，即证 $P \rightarrow Q$ 是重言式。</p><p>对于 $P \rightarrow Q$ 来说，除 $P$ 的真值取 $T$ ，$Q$ 的真值取 $F$ 这样一种指派时，$P \rightarrow Q$ 的真值为 $F$ 外，其余情况，$P \rightarrow Q$ 的真值为 $T$ 。故要证 $P \Rightarrow Q$ ，只需对条件命题 $P \rightarrow Q$ 的前件 $P$ ，指定真值为 $T$ ，若由此推出 $Q$ 的真值亦为 $T$ ，则 $P \rightarrow Q$ 是重言式，即 $P \Rightarrow Q$ 成立；同理，如对条件命题 $P \rightarrow Q$ 中，假定后件 $Q$ 的真值取 $F$ ，若由此推出 $P$ 的真值为 $F$ ，即推证了 $\neg Q \Rightarrow \neg P$ ，故 $P \Rightarrow Q$ 成立。</p><p><strong>定理 1-5.4 设 $P$ ，$Q$ 为任意两个命题公式，$P \Leftrightarrow Q$ 的充分必要条件是 $P \Rightarrow Q$ 且 $Q \Rightarrow P$ 。</strong></p><p>定理 1-5.4 的证明：</p><p><em>若 $P \Leftrightarrow Q$ 则 $P \leftrightarrow Q$ 为重言式，因为 $P \leftrightarrow Q \Leftrightarrow (P \rightarrow Q) \wedge (Q \rightarrow P)$ ，故 $P \rightarrow Q$  为 $T$ 且 $Q \rightarrow P$ 为 $T$ ，即 $P \Rightarrow Q$ ，$Q \Rightarrow P$ 成立。反之，若 $P \Rightarrow Q$ 且$Q \Rightarrow P$ ，则 $P \rightarrow Q$ 为 $T$ 且 $Q \rightarrow P$ 为 $T$ ，因此 $P \leftrightarrow Q$ 为 $T$ ，$P \leftrightarrow Q$ 是重言式，即 $P \Leftrightarrow Q$ 。</em></p><p><strong>这个定理也可作为两个公式等价的定义。</strong></p><p><em>蕴含有下面几个常用的性质：</em></p><ol><li><p>设 $A, B$ 为合式公式，若 $A \Rightarrow B$ 且 $A$ 是重言式，则 $B$ 必是重言式。<br> 证明：因为 $A \rightarrow B$ 永为 $T$ ，所以，当 $A$ 为 $T$ 时，B 必永为 $T$ 。</p></li><li><p>若 $A \Rightarrow B$ ，$B \Rightarrow C$ ，则 $A \Rightarrow C$ ，即蕴含关系是传递的。</p><p>  证明：由 $A \Rightarrow B, B \Rightarrow C$ ，即 $A \rightarrow B, B \rightarrow C$ 是重言式，所以 $(A \rightarrow B) \wedge (B \rightarrow C)$ 为重言式。<br>  由查表结果可知，$(A \rightarrow B) \wedge (B \rightarrow C) \Rightarrow A \rightarrow C$ ，故由性值 1 ，$A \rightarrow C$ 为重言式，即 $A \Rightarrow C$ 。</p></li><li><p>若 $A \Rightarrow B$，且 $A \Rightarrow C$ ，那么 $A \Rightarrow (B \wedge C)$ 。</p><p>  证明：由假设 $A \rightarrow B, A \rightarrow C$ 为重言式。设 $A$ 为 $T$ ，则 $B, C$ 为 $T$ ，故 $B \wedge C$ 为 $T$ 。因此，$A \rightarrow (B \wedge C)$ 为 $T$ 。<br>  若 $A$ 为 $F$，则 $B \wedge C$ 不论有怎样的真值，$A \rightarrow (B \wedge C)$ 为 $T$ 。所以<br>  $$<br>  A \Rightarrow (B \wedge C)<br>  $$</p><ol start="4"><li>若 $A \Rightarrow B$ 且 $C \Rightarrow B$ ，则 $A \vee C \Rightarrow B$ 。<br>证明 因为 $A \rightarrow B$ 为 $T$ ，$C \rightarrow B$ 为 $T$ ，故</li></ol></li></ol><p>$$<br>(\neg A \vee B) \wedge (\neg C \vee B)<br>$$</p><p>为 $T$ ，即 $(\neg A \wedge \neg C) \vee B$ 为 $T$，或 $A \vee C \rightarrow B$ 为 $T$ 。</p><p>所以<br>$$<br>A \vee C \Rightarrow B<br>$$</p><h3 id="1-7-对偶与范式"><a href="#1-7-对偶与范式" class="headerlink" title="1-7 对偶与范式"></a>1-7 对偶与范式</h3><h4 id="1-对偶"><a href="#1-对偶" class="headerlink" title="(1) 对偶"></a>(1) 对偶</h4><p><em><em>定义 在给定的命题公式中，将联结词 $\vee$ 换成合取 $\wedge$ 若有特殊变元 $F$ 和 $T$ 亦相互取代，所得公式 $A</em>$ 称为 $A$ 的对偶式。</em>*</p><p>举个例子：</p><p>S: $P \vee Q \wedge T$ </p><p>T: $P \wedge Q \vee F$</p><p>练习</p><p>a.  $(P \vee Q) \wedge R$</p><p>b. $(P \wedge Q) \vee T$</p><p>c. $\neg (P \vee Q) \wedge (P \vee \neg(Q \wedge \neg S)$</p><h4 id="2-范式"><a href="#2-范式" class="headerlink" title="(2) 范式"></a>(2) 范式</h4><h5 id="合取范式"><a href="#合取范式" class="headerlink" title="合取范式"></a>合取范式</h5><p><strong>定义 1-7.2 一个命题公式称为合取范式，当且仅当它具有形式：</strong><br>$$<br>A_1\wedge A_2\wedge … A_n, (n &gt;= 1)<br>$$<br><strong>其中 $A_1,A_2,…,A_n$ 都是由命题变元或命题变元的否定所组成的析取式。</strong></p><p>$A_1$ : $\neg P \vee Q$</p><p>$(P \vee \neg Q \vee R) \wedge (\neg P \vee Q) \wedge \neg Q$</p><h5 id="析取范式"><a href="#析取范式" class="headerlink" title="析取范式"></a>析取范式</h5><p><strong>定义 1-7.2 一个命题公式称为析取范式，当且仅当它具有形式:</strong><br>$$<br>A_1 \vee A_2\vee … A_n, (n &gt;= 1)<br>$$<br><strong>其中 $A_1,A_2,…,A_n$ 都是由命题变元或命题变元的否定所组成的合取式。</strong></p><p><strong>任何一个命题公式，求它的合取范式或析取范式，可以通过下面三个步骤进行：</strong></p><ol><li><strong>将公式中的联结词化成 $\wedge, \vee, 及 \neg$</strong></li><li><strong>利用德摩根律将否定符号 $\neg$ 直接移到各个命题变元之前。</strong></li><li><strong>利用分配律、结合律将公式归约为合取范式或析取范式。</strong></li></ol>]]></content>
    
    
    <categories>
      
      <category>离散数学</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>数列</title>
    <link href="/2021/03/06/dm_Lesson_03/"/>
    <url>/2021/03/06/dm_Lesson_03/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、数列"><a href="#一、数列" class="headerlink" title="一、数列"></a>一、数列</h2><h3 id="1-数列的概念"><a href="#1-数列的概念" class="headerlink" title="1.数列的概念"></a>1.数列的概念</h3><p><strong>依照某种规定排列着的一连串的数叫做数列</strong>。</p><p><em>可以结合编程语言中的数组来理解数列。</em></p><p>例如：数列 $0, 1, 2, 3, 4, 5, …$,  数列$\frac{1}{2}, \frac{1}{4}, \frac{1}{6}, …$</p><h3 id="2-数列的项"><a href="#2-数列的项" class="headerlink" title="2.数列的项"></a>2.数列的项</h3><p><strong>数列的每一个数叫做数列的一个项；从1开始数(编程语言中的数组一般从0开始数)，第n(n为自然数)个位置上的项就叫做第n项。数列的第n项通常可以用$a_n$来表示。</strong></p><p>例如：数列$\frac{1}{1}, \frac{1}{2}, \frac{1}{3}, …$</p><p><strong>数列的第n项，也叫做数列的通项。如果这个项$a_n$和项数n间的关系可以用一个公式来表示，这个公式就叫做这个数列的通项公式。</strong></p><p>例如上面那个数列的通项公式是:  $a_n=\frac{1}{n}$</p><p><strong>需要注意不是每一个数列都有通项公式的。</strong></p><p><em>知道了一个数列的通项公式，依次在n可取值的范围里，让n去各个不同的值代入公式，就可以求出这个数列的各个项。</em></p><p>练习：</p><p>$1. 已知数列的通项公式是: a_n=2*2^n, 写出它的前四项$</p><p><em>反过来，如果知道了数列的开头几项， 也可以用试探的方法，写出它的一个通项公式，但是这种公式并不是唯一的。</em></p><p>$2.已知一个数列的开头几项是\space 1, 3, 5, 7, …\space 求这个数列的通项公式。$</p><h2 id="二、等差数列"><a href="#二、等差数列" class="headerlink" title="二、等差数列"></a>二、等差数列</h2><h3 id="1-等差数列的概念"><a href="#1-等差数列的概念" class="headerlink" title="1.等差数列的概念"></a>1.等差数列的概念</h3><p><strong>如果一个数列，从第2项起，每一项减去它的前面一项所得的差都等于某一个常数，那么这个数列就叫做等差数列。</strong></p><p><strong>这个常数叫做等差数列的公差，通常用字母 $d$ 来表示。</strong></p><p>例如: $数列 1, 2, 3, 4, 5, … 是一个等差数列，它的公差\space d\space 是 1$</p><h3 id="2-等差数列的通项公式"><a href="#2-等差数列的通项公式" class="headerlink" title="2.等差数列的通项公式"></a>2.等差数列的通项公式</h3><p><strong>如果已经知道了一个数列是等差数列，并且知道了它的第1项 $a_1$ 和公差 $d$ ，就可以找出它的通项公式。</strong></p><p>例如:</p><p>$1. 已知一个等差数列的第一项是1，公差是2，求它的通项公式.$</p><p>根据等差数列的定义，我们知道，这个数列开头几项应该是：</p><p>$a_1=1, a_2=3, a_3=5, a_4=7, …$</p><p>这里我们就可以归纳出一个一般的规律: 从第二项起，每一项都等于第一项加上公差的 $(n-1)$ 倍， 也就是：<br>$$<br>a_n=1+(n-1)2<br>$$</p><p>当 n=1 的时候， 有 $a_1=1+(1-1)2=1$ ，所以这个公式也包括了第一项，因此它就是所求的通项公式。</p><p><strong>一般，如果等差数列的第一项是 $a_1$ , 公差是 $d$ ， 这个数列就应该是：</strong><br>$$<br>a_1, a_1+d, a_1+2d, …, a_1+(n-1)d<br>$$</p><p>这就是说：第一项是 $a_1$，公差是 $d$ 的等差数列的通项公式是：<br>$$<br>a_n=a_1+(n-1)d<br>$$<br>习题：</p><p>&amp; 1.求下面这些等差数列的第n项：</p><p>$(1)3, 7, 11, …$</p><p>$(2)11, 7, 3, …$</p><p>$(3)1, \frac{1}{3}, -\frac{1}{3}, …$</p><h3 id="3-等差数列的前n项的和的公式"><a href="#3-等差数列的前n项的和的公式" class="headerlink" title="3.等差数列的前n项的和的公式"></a>3.等差数列的前n项的和的公式</h3><p> 一般，设 $S_n$ 是等差数列 $a_1, a_1+d, a_1+2d, a_1+(n-1)d$ 前n项的和，那么:<br>$$<br>S_n=a_1+(a_1+d)+(a_1+2d)+…+[a_1+(n-2)d]+[a_1+(n-1)d] \tag{Ⅰ}<br>$$</p><p>把这个等式的右边倒过来可以改写成<br>$$<br>S_n=[a_1+(n-1)d]+[a_1+(n-2)d]+…+(a_1+2d)+(a_1+d)+a_1<br>$$</p><p>把上面两式的左右两边分别相加，得到<br>$$<br>\begin{align}<br>2S_n=&amp; {a_1+[a_1+(n-1)d]}+{(a_1+d)+[a_1+(n-2)d]}+{[a_1+(n-2)d]+(a_1+d)}+{[a_1+(n-1)d]+a_1}\<br>=&amp; [2a_1+(n-1)d]*n<br>\end{align}<br>$$</p><p>所以：<br>$$<br>S_n=\frac{n[2a_1+(n-1)d]}{2} \tag{Ⅱ}<br>$$</p><p>根据等差数列的通项公式<br>$$<br>a_n=a_1+(n-1)d<br>$$<br>在公式 (Ⅱ) 里把 $a_1+(n-1)d$ 代以 $a_n$ , 就得到<br>$$<br>S_n=\frac{n(a_1+a_n)}{2} \tag{Ⅲ}<br>$$<br>这个公式指出：等差数列前 n 项的和等于第一项与第 n 项的和的一半的 n 倍。</p><h3 id="4-求和符号"><a href="#4-求和符号" class="headerlink" title="4.求和符号"></a>4.求和符号</h3><p>我们一般用希腊字母 $\sum$ (sigma)来表示一组数的和，如等差数列 $1, 2, 3, 4, 5, … , 100$ 的和我们可以表示为<br>$$<br>\sum_{n=1}^{100}n<br>$$<br>这个数可以是以函数的形式给出，还是以上面的数列为例子：<br>$$<br>\begin{align}<br>&amp; 有函数 f(x) = x+1 \<br>&amp; \sum_{n=1}^{100}f(n) \<br>&amp; 那么这个式子表示的就是从1到100的所有自然数先自增1再进行求和<br>\end{align}<br>$$</p><h2 id="三、等比数列-暂时了解概念"><a href="#三、等比数列-暂时了解概念" class="headerlink" title="三、等比数列(暂时了解概念)"></a>三、等比数列(暂时了解概念)</h2><p><strong>如果一个数列，从第2项起，每一项除以它的前面一项所得的比值都等于某一个常数，那么这个数列就叫做等比数列。</strong></p><p><strong>这个常数叫做等比数列的公比，通常用字母 $q$ 来表示。</strong></p><p>例如: $数列 2, 4, 8, 16, 32, … 是一个等比数列，它的公比\space q\space 是 2$</p><p>等比数列的项不能为 0。</p>]]></content>
    
    
    <categories>
      
      <category>离散数学</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>排列与组合</title>
    <link href="/2021/03/06/dm_Lesson_02/"/>
    <url>/2021/03/06/dm_Lesson_02/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="排列"><a href="#排列" class="headerlink" title="排列"></a>排列</h2><p><strong>排列数公式:</strong><br>$$<br>A_m^n=m(m-1)(m-2)…(m_n+1)<br>$$</p><p><strong>主要考虑以下两种情况:</strong></p><ul><li>不允许重复</li><li>允许重复</li></ul><h3 id="全排列"><a href="#全排列" class="headerlink" title="全排列"></a>全排列</h3><p><strong>全排列公式:</strong><br>$$<br>P_n=n!<br>$$<br><strong>注意区分全排列和非全排列</strong></p><h2 id="组合"><a href="#组合" class="headerlink" title="组合"></a>组合</h2><p>先思考一个问题：</p><p>双色球的玩法规则如下：</p><ul><li>六只红色球，每个红色球取值范围是1到33；一只蓝色球，取值范围是1到16</li><li>红色球号码不允许重复</li><li>中奖号码不区分顺序</li><li>一等奖的中奖条件是六个红色球和一个蓝色球的号码都符合开奖结果的数字</li></ul><p>比如一等奖的开奖结果是 六个红色球是 1 2 3 4 5 6    蓝色球是 7。</p><p>问：随机买一注双色球，中一等奖的概率是多少？</p><p><strong>组合数公式:</strong></p><p>$$<br>C_m^n=\frac{A_m^n}{P_n}<br>$$</p>]]></content>
    
    
    <categories>
      
      <category>离散数学</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>写在前面的话</title>
    <link href="/2021/03/06/dm_Lesson_01/"/>
    <url>/2021/03/06/dm_Lesson_01/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="离散数学简要介绍"><a href="#离散数学简要介绍" class="headerlink" title="离散数学简要介绍"></a>离散数学简要介绍</h3><p>离散数学是以研究离散量的结构和相互间关系为主要目标，其研究对象一般是有限个或可数个元素，因此它充分描述了计算机科学离散性的特点。</p><p>离散数学是随着计算机科学的发展而逐步建立的，它形成于七十年代初期，是一门新兴的工具性学科。</p><h3 id="为什么要学习离散数学"><a href="#为什么要学习离散数学" class="headerlink" title="为什么要学习离散数学"></a>为什么要学习离散数学</h3><p>离散数学与计算机科学中的数据结构、操作系统、编译原理、算法分析、逻辑设计、系统结构、容错诊断、机器定理证明等课程紧密联系。</p><p>学习离散数学可以培养我们的抽象思维和缜密概括能力。</p><h3 id="学习路线梳理"><a href="#学习路线梳理" class="headerlink" title="学习路线梳理"></a>学习路线梳理</h3><p>较为现实的学习目标是：</p><ul><li>了解逻辑(数理逻辑)</li><li>排列组合</li><li>集合论</li><li>图论</li></ul>]]></content>
    
    
    <categories>
      
      <category>离散数学</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>jmp 指令</title>
    <link href="/2021/03/06/jmp/"/>
    <url>/2021/03/06/jmp/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="jmp-指令"><a href="#jmp-指令" class="headerlink" title="jmp 指令"></a>jmp 指令</h3><p>jmp 为无条件转移指令，可以只修改 IP，也可以同时修改 CS 和 IP。</p><p>jmp 指令需要给出两种信息：</p><ol><li>转移的目的地址</li><li>转移的距离(段间转移、段内短转移、段内近转移)</li></ol><h4 id="jmp-short"><a href="#jmp-short" class="headerlink" title="jmp short"></a>jmp short</h4><p>格式：jmp short 标号</p><p>这种格式的 jmp 指令实现的是段内短转移，它对 IP 的修改范围是 $-128 \sim 127$ ，也就是说它向前转移时可以最多越过 128 个字节，向后转移最多越过 127 个字节。jmp 指令中的 “short” 符号，说明指令进行的是短转移。jmp 指令中的 “标号” 是代码段中的标号，指明了指令要转移的目标地址，转移指令执行结束后，CS:IP 应该指向标号处的指令。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs assembly">mov ax,3<br>jmp short go<br>add ax,1<br>go: inc ax<br></code></pre></div></td></tr></table></figure><p>其编译后的汇编指令如下：</p><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs assembly">0BBD:0000 B80000 MOV AX,0003<br>0BBD:0003 EB03   JMP 0008<br>0BBD:0005 050100 ADD AX,0001<br>0BBD:0008 40     INC AX<br></code></pre></div></td></tr></table></figure><p>CPU 执行指令的流程：</p><ol><li>从 CS:IP 指向的内存单元中读取指令，读取的指令进入指令缓冲器</li><li>IP = IP + 所读取的指令长度，指向下一条指令</li><li>执行指令，回到步骤1</li></ol><p>从编译后的汇编代码来看，jmp short go 被读取后，IP = IP + 2(jmp short go 的指令长度，为两个字节)，因此 IP = 0005；接着 jmp short go 被执行，IP = IP + 3 (add ax,1的指令长度，为3个字节)，此时 IP = IP + 3，也就是 IP = 0008，最终 add ax,1 没有被执行，IP 指向了 inc ax。</p><p>jmp short功能说明：</p><ol><li>8位位移 = 标号处的地址 - jmp 指令后的第一个字节的地址</li><li>short 指明此处的位移为 8 位位移</li><li>8 位位移的范围是 $-128 \sim 127$</li><li>8 位位移由编译程序再编译时计算得出</li></ol><h4 id="jmp-near"><a href="#jmp-near" class="headerlink" title="jmp near"></a>jmp near</h4><p>格式：jmp near 标号</p><p>jmp near 指令和 jmp short 指令功能相近，它实现的是 16位段内近转移。</p><p>也就是说这个指令支持的位移范围是 $-32768 \sim 32767$</p><p>jmp near 功能说明：</p><ol><li>16位位移 = 标号处的地址 - jmp 指令后的第一个字节的地址</li><li>near 指明此处的位移为 16 位位移</li><li>16 位位移的范围是 $-32768 \sim 32767$</li><li>16位位移由编译程序再编译时计算得出</li></ol>]]></content>
    
    
    <categories>
      
      <category>x86汇编</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>movsb 与 movsw 指令</title>
    <link href="/2021/03/06/movsb_movsw/"/>
    <url>/2021/03/06/movsb_movsw/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="段之间的批量数据传送"><a href="#段之间的批量数据传送" class="headerlink" title="段之间的批量数据传送"></a>段之间的批量数据传送</h3><h4 id="movsb和movsw"><a href="#movsb和movsw" class="headerlink" title="movsb和movsw"></a>movsb和movsw</h4><p>movsb 和 movsw 这两个指令通常用于把数据从内存中的一个地方批量复制到另一个地方，处理器把它们看成是数据串。</p><p>movsb 以字节为单位，movsw 以字(两个字节)为单位。</p><p>movsb 和 movsw 指令执行时，源地址的段地址由 DS 指定，偏移地址由 SI 指定，简写为 DS:SI， 目的地址由 ES:DI 指定；传送的字节数或字数由 CX 指定。</p><p>传送方向有两种：</p><ul><li>正向传送：从内存低地址到高地址；每次 SI 和 DI 加 1 或 加 2。</li><li>反向传送：从内存高地址到低地址；每次 SI 和 DI 减 1 或 减 2。</li></ul><p>不管传送方向和传送单位是字节还是字， 没传送一次，CX 的值自动减一。</p><h4 id="DF-标志位-Direction-Flag"><a href="#DF-标志位-Direction-Flag" class="headerlink" title="DF 标志位(Direction Flag)"></a>DF 标志位(Direction Flag)</h4><p>通过将这一位清零或者置为1，就能控制 movsb 和 movsw 的传送方向。</p><p>设置方法如下：</p><ul><li>cld指令(clear direction flag) ：无操作数，指令执行后，将 DF 清0；此时是正方向。</li><li>std指令(set direction flag)：无操作数，指令执行后，将 DF 置1；此时是反方向。</li></ul><h4 id="rep-前缀-repeat"><a href="#rep-前缀-repeat" class="headerlink" title="rep 前缀(repeat)"></a>rep 前缀(repeat)</h4><p>movsb 和 movsw 只能执行一次，如果需要处理器自动地反复执行，需要加上指令前缀 rep ，则表示 CX 不为零则重复。</p><p>rep movsw 地操作码 是 0xF3 0xA5，它将重复执行 movsw 直至 CX 的值位 0 。</p>]]></content>
    
    
    <categories>
      
      <category>x86汇编</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
