<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Python Pandas操作Excel</title>
    <link href="/2021/03/09/Excel/"/>
    <url>/2021/03/09/Excel/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Python-Pandas操作Excel"><a href="#Python-Pandas操作Excel" class="headerlink" title="Python Pandas操作Excel"></a><font color="#008080">Python Pandas操作Excel</font></h2><p><code>前情提要</code></p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx">本章使用的 Python3.6 Pandas==0.25.3<br>项目中需要用到excel的文件字段太多 考虑到后续字段命名的变动以及中文/英文/日文...等多国语言的校验<br>操作麻烦 后改进的操作方式<br></code></pre></div></td></tr></table></figure><h3 id="测试文件点击下载"><a href="#测试文件点击下载" class="headerlink" title="测试文件点击下载"></a><a href="https://bree.faqbug.cn/static/ceshi.xlsx">测试文件点击下载</a></h3><h2 id="Pandas中文文档"><a href="#Pandas中文文档" class="headerlink" title="Pandas中文文档"></a><font color="#008080">Pandas中文文档</font></h2><h3 id="Pandas中文文档-1"><a href="#Pandas中文文档-1" class="headerlink" title="Pandas中文文档"></a><a href="https://www.pypandas.cn/">Pandas中文文档</a></h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># 安装pandas</span><br><span class="hljs-comment"># -i https://pypi.douban.com/simple/ 国内镜像加速</span><br>pip insatll pandas==<span class="hljs-number">0.25</span><span class="hljs-number">.3</span> -i https://pypi.douban.com/simple/<br><br></code></pre></div></td></tr></table></figure><h2 id="操作Excel文件-获取列数据"><a href="#操作Excel文件-获取列数据" class="headerlink" title="操作Excel文件/获取列数据"></a><font color="#008080">操作Excel文件/获取列数据</font></h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">################ Rudy ################</span><br><span class="hljs-string">############# 2021-01-22 #############</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_excel</span>(<span class="hljs-params">path_load</span>):</span><br>    df1 = pd.read_excel(path_load) <span class="hljs-comment"># 读取excel</span><br>    df2 = df1.dropna(how=<span class="hljs-string">&#x27;all&#x27;</span>)  <span class="hljs-comment"># 数据清洗，为完成需求删去不必要的行</span><br>    df2 = df2.replace(<span class="hljs-string">&#x27;-&#x27;</span>, <span class="hljs-number">0</span>)  <span class="hljs-comment"># 把‘-’的替换成0便于后面计算</span><br>    df2 = df2.fillna(<span class="hljs-number">0</span>)  <span class="hljs-comment"># 数据清洗，缺失值用0补足</span><br>    df2 = df2.reset_index(drop=<span class="hljs-literal">True</span>)  <span class="hljs-comment"># 重设行索引</span><br>    column_name = [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> df1]  <span class="hljs-comment"># 获取所有的列名</span><br>    <span class="hljs-keyword">if</span> df2.empty:  <span class="hljs-comment"># 校验文件是否为空 </span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;文件内容为空,请检查是否有数据&#x27;</span><br>    <span class="hljs-keyword">try</span>:<br>        start_date_time = df2[column_name[<span class="hljs-number">0</span>]].dt.strftime(<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>)<br>        end_date_time = df2[column_name[<span class="hljs-number">1</span>]].dt.strftime(<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>)<br>        advertising_mix_name = df2[column_name[<span class="hljs-number">2</span>]]<br>        currency = df2[column_name[<span class="hljs-number">3</span>]]<br>        name_of_advertising_campaign = df2[column_name[<span class="hljs-number">4</span>]]<br>        name_of_advertising_group = df2[column_name[<span class="hljs-number">5</span>]]<br>        launch = df2[column_name[<span class="hljs-number">6</span>]]<br>        matching_type = df2[column_name[<span class="hljs-number">7</span>]].replace(<span class="hljs-string">&#x27;-&#x27;</span>, <span class="hljs-string">&quot;Automatic&quot;</span>)<br>        customer_search_terms = df2[column_name[<span class="hljs-number">8</span>]]<br>        display_volume = df2[column_name[<span class="hljs-number">9</span>]]<br>        hits = df2[column_name[<span class="hljs-number">10</span>]]<br>        ctr = <span class="hljs-built_in">round</span>(df2[column_name[<span class="hljs-number">11</span>]] * <span class="hljs-number">100</span>, <span class="hljs-number">2</span>)<br>        cpc = <span class="hljs-built_in">round</span>(df2[column_name[<span class="hljs-number">12</span>]], <span class="hljs-number">2</span>)<br>        spend = df2[column_name[<span class="hljs-number">13</span>]]<br>        total_sales = df2[column_name[<span class="hljs-number">14</span>]]<br>        acos = <span class="hljs-built_in">round</span>(df2[column_name[<span class="hljs-number">15</span>]] * <span class="hljs-number">100</span>, <span class="hljs-number">2</span>)<br>        roas = <span class="hljs-built_in">round</span>(df2[column_name[<span class="hljs-number">16</span>]], <span class="hljs-number">2</span>)<br>        total_orders_in_seven_days = df2[column_name[<span class="hljs-number">17</span>]]<br>        total_sales2 = df2[column_name[<span class="hljs-number">18</span>]]<br>        seven_days_conversion_rate = <span class="hljs-built_in">round</span>(df2[column_name[<span class="hljs-number">19</span>]] * <span class="hljs-number">100</span>, <span class="hljs-number">2</span>)<br>        advertising_sku_sales = df2[column_name[<span class="hljs-number">20</span>]]<br>        other_sku_sales = df2[column_name[<span class="hljs-number">21</span>]]<br>        advertising_sku_sales2 = df2[column_name[<span class="hljs-number">22</span>]]<br>        other_sku_sales2 = df2[column_name[<span class="hljs-number">23</span>]]<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        print(e)<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;文件上传失败...联系客服解决&#x27;</span><br><br><br>file_path = <span class="hljs-string">&#x27;./ceshi.xlsx&#x27;</span><br>f = get_excel(file_path)<br>print(f)<br><br></code></pre></div></td></tr></table></figure><h2 id="其他操作-某行-某列数据"><a href="#其他操作-某行-某列数据" class="headerlink" title="其他操作/某行/某列数据"></a><font color="#008080">其他操作/某行/某列数据</font></h2><p><strong>获取某一行或者某几行的数据 整行数据</strong></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># 获取一行数据</span><br>l1 = df2[<span class="hljs-number">0</span>:<span class="hljs-number">1</span>]<br><span class="hljs-comment"># 获取多行数据 例如获取全部</span><br>l2 = df2[<span class="hljs-number">0</span>:<span class="hljs-built_in">len</span>(df2)]<br></code></pre></div></td></tr></table></figure><p><strong>操作示例</strong></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">################ Rudy ################</span><br><span class="hljs-string">############# 2021-01-22 #############</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_excel</span>(<span class="hljs-params">path_load</span>):</span><br>    df1 = pd.read_excel(path_load)<br>    df2 = df1.dropna(how=<span class="hljs-string">&#x27;all&#x27;</span>)  <span class="hljs-comment"># 数据清洗，为完成需求删去不必要的行</span><br>    df2 = df2.replace(<span class="hljs-string">&#x27;-&#x27;</span>, <span class="hljs-number">0</span>)  <span class="hljs-comment"># 把‘-’的替换成0便于后面计算</span><br>    df2 = df2.fillna(<span class="hljs-number">0</span>)  <span class="hljs-comment"># 数据清洗，缺失值用0补足</span><br>    df2 = df2.reset_index(drop=<span class="hljs-literal">True</span>)  <span class="hljs-comment"># 重设行索引</span><br>    column_name = [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> df1]  <span class="hljs-comment"># 获取所有的列名</span><br>    <span class="hljs-keyword">if</span> df2.empty:  <span class="hljs-comment"># 校验文件是否为空 </span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;文件内容为空,请检查是否有数据&#x27;</span><br>    <span class="hljs-comment"># 获取一行数据</span><br>    l1 = df2[<span class="hljs-number">0</span>:<span class="hljs-number">1</span>]<br>    <span class="hljs-comment"># 获取多行数据 例如获取全部</span><br>    l2 = df2[<span class="hljs-number">0</span>:<span class="hljs-built_in">len</span>(df2)]<br><br><br>file_path = <span class="hljs-string">&#x27;./ceshi.xlsx&#x27;</span><br>f = get_excel(file_path)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">print(l1)</span><br><span class="hljs-string">  Start Date  ... 7 Day Other SKU Sales ($)</span><br><span class="hljs-string">0 2021-01-06  ...                         0</span><br><span class="hljs-string"></span><br><span class="hljs-string">[1 rows x 24 columns]</span><br><span class="hljs-string"></span><br><span class="hljs-string">print(l2)</span><br><span class="hljs-string">   Start Date  ... 7 Day Other SKU Sales ($)</span><br><span class="hljs-string">0  2021-01-06  ...                         0</span><br><span class="hljs-string">1  2021-01-06  ...                         0</span><br><span class="hljs-string">2  2021-01-05  ...                         0</span><br><span class="hljs-string">3  2021-01-05  ...                         0</span><br><span class="hljs-string">..................剩下的忽略..................</span><br><span class="hljs-string"></span><br><span class="hljs-string">[31 rows x 24 columns]</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br></code></pre></div></td></tr></table></figure><p><strong>使用loc获取数据,loc可接受两个参数/一个为行下标/一个为列下标</strong></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># 获取某一行数据 如果已知行 可以选择这种方式</span><br>l1 = df2.loc[<span class="hljs-number">0</span>]<br><span class="hljs-comment"># 获取第几行 与 第几行的数据 注意是 与 代表获取的第5与第10行数据</span><br>l2 = df2.loc[[<span class="hljs-number">5</span>, <span class="hljs-number">10</span>]]<br><span class="hljs-comment"># 通过切片方式获取多行数据</span><br>l3 = df2.loc[<span class="hljs-number">0</span>:<span class="hljs-number">10</span>]<br></code></pre></div></td></tr></table></figure><p><strong>操作示例:</strong></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">################ Rudy ################</span><br><span class="hljs-string">############# 2021-01-22 #############</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_excel</span>(<span class="hljs-params">path_load</span>):</span><br>    df1 = pd.read_excel(path_load)<br>    df2 = df1.dropna(how=<span class="hljs-string">&#x27;all&#x27;</span>)  <span class="hljs-comment"># 数据清洗，为完成需求删去不必要的行</span><br>    df2 = df2.replace(<span class="hljs-string">&#x27;-&#x27;</span>, <span class="hljs-number">0</span>)  <span class="hljs-comment"># 把‘-’的替换成0便于后面计算</span><br>    df2 = df2.fillna(<span class="hljs-number">0</span>)  <span class="hljs-comment"># 数据清洗，缺失值用0补足</span><br>    df2 = df2.reset_index(drop=<span class="hljs-literal">True</span>)  <span class="hljs-comment"># 重设行索引</span><br>    column_name = [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> df1]  <span class="hljs-comment"># 获取所有的列名</span><br>    <span class="hljs-keyword">if</span> df2.empty:  <span class="hljs-comment"># 校验文件是否为空 </span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;文件内容为空,请检查是否有数据&#x27;</span><br>    <span class="hljs-comment"># 获取某一行数据 如果已知行 可以选择这种方式</span><br>    l1 = df2.loc[<span class="hljs-number">0</span>]<br>    <span class="hljs-comment"># 获取第几行 与 第几行的数据 注意是 与 代表获取的第5与第10行数据</span><br>    l2 = df2.loc[[<span class="hljs-number">5</span>, <span class="hljs-number">10</span>]]<br>    <span class="hljs-comment"># 通过切片方式获取多行数据</span><br>    l3 = df2.loc[<span class="hljs-number">0</span>:<span class="hljs-number">10</span>]<br><br><br>file_path = <span class="hljs-string">&#x27;./ceshi.xlsx&#x27;</span><br>f = get_excel(file_path)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">print(l1)</span><br><span class="hljs-string">Start Date                            2021-01-06 00:00:00</span><br><span class="hljs-string">End Date                              2021-01-06 00:00:00</span><br><span class="hljs-string">Portfolio name                                Not grouped</span><br><span class="hljs-string">....忽略中间部分....</span><br><span class="hljs-string">7 Day Advertised SKU Units (#)                          0</span><br><span class="hljs-string">7 Day Other SKU Units (#)                               0</span><br><span class="hljs-string">7 Day Advertised SKU Sales ($)                          0</span><br><span class="hljs-string">7 Day Other SKU Sales ($)                               0</span><br><span class="hljs-string">Name: 0, dtype: object</span><br><span class="hljs-string"></span><br><span class="hljs-string">print(l2)</span><br><span class="hljs-string">   Start Date  ... 7 Day Other SKU Sales ($)</span><br><span class="hljs-string">5  2021-01-06  ...                         0</span><br><span class="hljs-string">10 2021-01-09  ...                         0</span><br><span class="hljs-string"></span><br><span class="hljs-string">[2 rows x 24 columns]</span><br><span class="hljs-string"></span><br><span class="hljs-string">print(l3)</span><br><span class="hljs-string">...</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>技术杂谈</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>登录限制IP</title>
    <link href="/2021/03/08/login-IP/"/>
    <url>/2021/03/08/login-IP/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="登录-限制ip☟"><a href="#登录-限制ip☟" class="headerlink" title="登录-限制ip☟"></a><font color="#008080">登录-限制ip☟</font></h2><p><strong><code>前情提要</code> <a href="#">☟</a></strong></p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx">用户使用手机号码登录 校验密码输入错误的次数<br>使用MySQL记录密码输入次数 当输入次数达到10次<br>使用redis记录ip地址 将限制该ip禁止访问页面 30min<br>本章使用: python3.6 django MySQL Redis<br></code></pre></div></td></tr></table></figure><p><img src="https://p.pstatp.com/origin/1376e0001f46d7a8f33f4" alt="流程图"></p><h2 id="登录接口–-gt-GET请求☟"><a href="#登录接口–-gt-GET请求☟" class="headerlink" title="登录接口–&gt;GET请求☟"></a><font color="#008080">登录接口–&gt;GET请求☟</font></h2><table><thead><tr><th>参数</th><th>值</th><th>备注</th><th>请求方式</th></tr></thead><tbody><tr><td>参考路由</td><td><a href="http://127.0.0.1:8000/login/">http://127.0.0.1:8000/login/</a></td><td>用户登录接口</td><td>GET</td></tr><tr><td>GET请求</td><td>login.html</td><td>返回登录页面</td><td></td></tr></tbody></table><h2 id="后端代码–-gt-django-urls"><a href="#后端代码–-gt-django-urls" class="headerlink" title="后端代码–&gt;django/urls"></a>后端代码–&gt;django/urls</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> re_path<br><br><span class="hljs-comment"># 新增一个路由</span><br>re_path(<span class="hljs-string">r&#x27;login/$&#x27;</span>, LoginView.as_view(), name=<span class="hljs-string">&quot;login&quot;</span>),  <span class="hljs-comment"># 登录接口</span><br></code></pre></div></td></tr></table></figure><h2 id="后端代码–-gt-django-views"><a href="#后端代码–-gt-django-views" class="headerlink" title="后端代码–&gt;django/views"></a>后端代码–&gt;django/views</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LoginView</span>(<span class="hljs-params">View</span>):</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get</span>(<span class="hljs-params">self, request</span>):</span><br>        <span class="hljs-string">&quot;&quot;&quot;返回登录页面&quot;&quot;&quot;</span><br>        ip_lock = get_ip_lock(request)  <span class="hljs-comment"># get_ip_lock()自定义函数 用于获取ip是否被锁定限制</span><br>        <span class="hljs-keyword">if</span> ip_lock:<br>            response = render(request, <span class="hljs-string">&#x27;404.html&#x27;</span>, ip_lock)<br>            <span class="hljs-keyword">return</span> response<br>        <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;login.html&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h2 id="后端代码–-gt-django-utils"><a href="#后端代码–-gt-django-utils" class="headerlink" title="后端代码–&gt;django/utils"></a>后端代码–&gt;django/utils</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># 自定义工具包 用于获取ip</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_ip_lock</span>(<span class="hljs-params">request</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    get lock ip</span><br><span class="hljs-string">    :param request:</span><br><span class="hljs-string">    :return:</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    x_forwarded_for = request.META.get(<span class="hljs-string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>)<br>    <span class="hljs-keyword">if</span> x_forwarded_for:<br>        ip = x_forwarded_for.split(<span class="hljs-string">&#x27;,&#x27;</span>)[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">else</span>:<br>        ip = request.META.get(<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        ip_lock_time = <span class="hljs-built_in">eval</span>(redis_conn.get(<span class="hljs-string">&#x27;ip_%s&#x27;</span> % ip).decode())<br>        <span class="hljs-keyword">if</span> ip_lock_time <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">if</span> (datetime.datetime.now() - ip_lock_time.get(<span class="hljs-string">&#x27;time&#x27;</span>)).total_seconds() &lt; <span class="hljs-number">1800</span>:<br>                s = <span class="hljs-built_in">int</span>(<span class="hljs-number">1800</span> - (datetime.datetime.now() - ip_lock_time.get(<span class="hljs-string">&#x27;time&#x27;</span>)).total_seconds())<br>                content = &#123;<span class="hljs-string">&#x27;s_time&#x27;</span>: s&#125;<br>                <span class="hljs-keyword">return</span> content<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">pass</span><br></code></pre></div></td></tr></table></figure><h2 id="登录接口–-gt-POST请求☟"><a href="#登录接口–-gt-POST请求☟" class="headerlink" title="登录接口–&gt;POST请求☟"></a><font color="#008080">登录接口–&gt;POST请求☟</font></h2><table><thead><tr><th>参数</th><th>值</th><th>备注</th><th>请求方式</th></tr></thead><tbody><tr><td>username/mobile</td><td>kiki/13412345678</td><td>用户名/手机号</td><td>POST</td></tr><tr><td>password</td><td>kiokiokiokio</td><td>密码</td><td></td></tr></tbody></table><h2 id="后端代码–-gt-django-views-1"><a href="#后端代码–-gt-django-views-1" class="headerlink" title="后端代码–&gt;django/views"></a>后端代码–&gt;django/views</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">post</span>(<span class="hljs-params">self, request</span>):</span><br>    username = <span class="hljs-built_in">str</span>(request.POST.get(<span class="hljs-string">&#x27;username&#x27;</span>)).strip()<br>    password = <span class="hljs-built_in">str</span>(request.POST.get(<span class="hljs-string">&#x27;password&#x27;</span>)).strip()<br>    remembered = request.POST.get(<span class="hljs-string">&#x27;remembered&#x27;</span>)<br>    x_forwarded_for = request.META.get(<span class="hljs-string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>)<br>    <span class="hljs-keyword">if</span> x_forwarded_for:<br>        ip = x_forwarded_for.split(<span class="hljs-string">&#x27;,&#x27;</span>)[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">else</span>:<br>        ip = request.META.get(<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">all</span>([username, password]):<br>       <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;login.html&#x27;</span>, &#123;<span class="hljs-string">&#x27;account_errmsg&#x27;</span>: <span class="hljs-string">&#x27;缺少参数,请检查&#x27;</span>&#125;)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> re.match(<span class="hljs-string">r&#x27;^[0-9a-zA-Z]&#123;8,20&#125;$&#x27;</span>, password):<br>       <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;login.html&#x27;</span>, &#123;<span class="hljs-string">&#x27;account_errmsg&#x27;</span>: <span class="hljs-string">&#x27;密码长度8-20之间的英文与数字&#x27;</span>&#125;)<br>    user = auth.authenticate(username=username, password=password)<br>    <span class="hljs-keyword">if</span> user <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">try</span>:<br>            user = User.objects.get(Q(username=username) | Q(email=username) | Q(mobile=username))<br>            get_lock_user(user, ip)  <span class="hljs-comment"># 获取账号输入的密码错误次数记录与ip记录</span><br>            <span class="hljs-keyword">if</span> user.pass_error &gt;= <span class="hljs-number">10</span>:<br>                <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;login.html&#x27;</span>, &#123;<span class="hljs-string">&#x27;account_errmsg&#x27;</span>: <span class="hljs-string">&#x27;密码错误超过10次，用户锁定半小时&#x27;</span>&#125;)<br>            <span class="hljs-keyword">elif</span> <span class="hljs-number">5</span> &lt;= user.pass_error &lt;= <span class="hljs-number">9</span>:<br>                <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;login.html&#x27;</span>, &#123;<span class="hljs-string">&#x27;account_errmsg&#x27;</span>: <span class="hljs-string">&#x27;密码错误超过5次，用户锁定十分钟&#x27;</span>&#125;)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;login.html&#x27;</span>, &#123;<span class="hljs-string">&#x27;account_errmsg&#x27;</span>: <span class="hljs-string">&#x27;暂无该账户,请先注册&#x27;</span>&#125;)<br>        <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;login.html&#x27;</span>, &#123;<span class="hljs-string">&#x27;account_errmsg&#x27;</span>: <span class="hljs-string">&#x27;账号或密码输入有误,请检查&#x27;</span>&#125;)<br>    <span class="hljs-keyword">if</span> user.is_login:<br>        <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;login.html&#x27;</span>, &#123;<span class="hljs-string">&#x27;account_errmsg&#x27;</span>: <span class="hljs-string">&#x27;该账号已登录&#x27;</span>&#125;)<br>    <span class="hljs-keyword">if</span> <span class="hljs-number">5</span> &lt;= user.pass_error &lt; <span class="hljs-number">10</span>:<br>        <span class="hljs-keyword">if</span> (datetime.datetime.now() - user.login_lock).total_seconds() &lt; <span class="hljs-number">600</span>:<br>            <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;login.html&#x27;</span>, &#123;<span class="hljs-string">&#x27;account_errmsg&#x27;</span>: <span class="hljs-string">&#x27;账号锁定十分钟内不能登陆成功!&#x27;</span>&#125;)<br>    login(request, user)<br>    <span class="hljs-keyword">if</span> remembered != <span class="hljs-string">&#x27;on&#x27;</span>:<br>        request.session.set_expiry(<span class="hljs-number">7</span> * <span class="hljs-number">24</span> * <span class="hljs-number">3600</span>)<br>    <span class="hljs-keyword">else</span>:<br>        request.session.set_expiry(<span class="hljs-number">7</span> * <span class="hljs-number">24</span> * <span class="hljs-number">3600</span>)<br>    <span class="hljs-built_in">next</span> = request.GET.get(<span class="hljs-string">&#x27;next&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">next</span>:<br>        response = redirect(<span class="hljs-built_in">next</span>)<br>    <span class="hljs-keyword">else</span>:<br>        response = redirect(reverse(<span class="hljs-string">&#x27;alex_index:index&#x27;</span>))<br>    get_login_user(user)  <span class="hljs-comment"># 用户登录成功 则将记录清除为0</span><br>    response.set_cookie(<span class="hljs-string">&#x27;username&#x27;</span>, user.username, max_age=<span class="hljs-number">7</span> * <span class="hljs-number">24</span> * <span class="hljs-number">3600</span>)<br>    <span class="hljs-keyword">return</span> response<br></code></pre></div></td></tr></table></figure><h2 id="后端代码–-gt-django-utils-1"><a href="#后端代码–-gt-django-utils-1" class="headerlink" title="后端代码–&gt;django/utils"></a>后端代码–&gt;django/utils</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_lock_user</span>(<span class="hljs-params">user, ip</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    get lock user</span><br><span class="hljs-string">    :param user:</span><br><span class="hljs-string">    :param ip:</span><br><span class="hljs-string">    :return:</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> user.ip <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> user.ip != ip:<br>        user.ip = ip<br>    user.login_lock = datetime.datetime.now()<br>    user.pass_error += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> user.pass_error &gt;= <span class="hljs-number">10</span>:  <span class="hljs-comment"># if pass_error &gt; 10 lockIP 当密码错误记录到10</span><br>        lock_ip_time = &#123;<span class="hljs-string">&quot;time&quot;</span>: datetime.datetime.now(), <span class="hljs-string">&#x27;ip&#x27;</span>: ip&#125;  <span class="hljs-comment"># 记录当前时间与ip</span><br>        redis_conn.setex(<span class="hljs-string">&#x27;ip_%s&#x27;</span> % ip, constants.IP_LOCK_TIME, <span class="hljs-built_in">str</span>(lock_ip_time))  <span class="hljs-comment"># redis记录ip</span><br>    user.save()<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>技术杂谈</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>微信登录-扫码绑定用户 二)</title>
    <link href="/2021/03/08/%E5%BE%AE%E4%BF%A1%E7%99%BB%E5%BD%95-3/"/>
    <url>/2021/03/08/%E5%BE%AE%E4%BF%A1%E7%99%BB%E5%BD%95-3/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="在微信扫码登录的时候-限定绑定手机号☟"><a href="#在微信扫码登录的时候-限定绑定手机号☟" class="headerlink" title="在微信扫码登录的时候 限定绑定手机号☟"></a><font color="#008080">在微信扫码登录的时候 限定绑定手机号☟</font></h2><p><strong><code>前情提要</code> <a href="#">☟</a></strong></p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json">用户使用手机号码登录后 校验是否已经绑定微信号<br>微信扫码登录的用户 校验是否已经绑定手机号码<br>本章使用: python3.6 django MySQL<br>在微信扫码的登陆的时候 校验没有绑定手机号的话 就跳转绑定手机号<br></code></pre></div></td></tr></table></figure><p><img src="https://p.pstatp.com/origin/138390002aa0dc5ee88b7" alt="流程图"></p><h2 id="校验第一次微信扫码☟"><a href="#校验第一次微信扫码☟" class="headerlink" title="校验第一次微信扫码☟"></a><font color="#008080">校验第一次微信扫码☟</font></h2><table><thead><tr><th>参数</th><th>值</th><th>备注</th><th>请求方式</th></tr></thead><tbody><tr><td>参考路由</td><td><a href="http://127.0.0.1:8000/Wxbinduser/">http://127.0.0.1:8000/Wxbinduser/</a></td><td>校验第一次扫码微信</td><td>GET</td></tr><tr><td>code</td><td>071xnUkl2wUPo64to1ol2MhKFY1xnUkZ</td><td>用户扫码后的code值</td><td></td></tr><tr><td>state</td><td>STATE</td><td>默认值</td><td></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WeXinLogin</span>(<span class="hljs-params">APIView</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get</span>(<span class="hljs-params">self, request</span>):</span><br>        code = request.GET.get(<span class="hljs-string">&#x27;code&#x27;</span>)<br>        state = request.GET.get(<span class="hljs-string">&quot;state&quot;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">all</span>([code, state]):<br>            <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.DBERR, <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;缺少code数据&#x27;</span>&#125;)<br>        useropenid, usernickname, userheadimgurl, userunionid = get_wechat_user(code)<br>        <span class="hljs-keyword">try</span>:<br>            user = User.objects.get(useropenid=useropenid)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.USERERR, <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;请先注册一个手机号&#x27;</span>&#125;)<br>        <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.OK, <span class="hljs-string">&#x27;token&#x27;</span>: user.jwt_token, <span class="hljs-string">&#x27;mobile&#x27;</span>: user.mobile&#125;)<br></code></pre></div></td></tr></table></figure><h2 id="校验是否已经绑定过微信☟"><a href="#校验是否已经绑定过微信☟" class="headerlink" title="校验是否已经绑定过微信☟"></a><font color="#008080">校验是否已经绑定过微信☟</font></h2><table><thead><tr><th>参数</th><th>值</th><th>备注</th><th>请求方式</th></tr></thead><tbody><tr><td>参考路由</td><td><a href="http://127.0.0.1:8000/checkWx/">http://127.0.0.1:8000/checkWx/</a></td><td>校验该手机用户是否绑定了微信</td><td>GET</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WeXinBindView</span>(<span class="hljs-params">APIView</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;校验是否已经绑定过微信&quot;&quot;&quot;</span><br>    authentication_classes = [MyBaseAuthentication, ]<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get</span>(<span class="hljs-params">self, request</span>):</span><br>        user = is_master(request.user)<br>        <span class="hljs-keyword">if</span> user.useropenid <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.DBERR, <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;您的账号尚未绑定微信,请先绑定微信&#x27;</span>&#125;)<br>        <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.OK&#125;)<br></code></pre></div></td></tr></table></figure><h2 id="校验第二次微信扫码☟"><a href="#校验第二次微信扫码☟" class="headerlink" title="校验第二次微信扫码☟"></a><font color="#008080">校验第二次微信扫码☟</font></h2><table><thead><tr><th>参数</th><th>值</th><th>备注</th><th>请求方式</th></tr></thead><tbody><tr><td>参考路由</td><td><a href="http://127.0.0.1:8000/UW/">http://127.0.0.1:8000/UW/</a></td><td>用户登录成功/第二次扫码-绑定微信</td><td>GET</td></tr><tr><td>code</td><td>071xnUkl2wUPo64to1ol2MhKFY1xnUkZ</td><td>code值</td><td></td></tr><tr><td>state</td><td>STATE</td><td>默认值</td><td></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MobileBindWeChatView</span>(<span class="hljs-params">APIView</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;手机号码登录成功--绑定微信号&quot;&quot;&quot;</span><br>    authentication_classes = [MyBaseAuthentication, ]<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get</span>(<span class="hljs-params">self, request</span>):</span><br>        code = request.GET.get(<span class="hljs-string">&#x27;code&#x27;</span>)<br>        state = request.GET.get(<span class="hljs-string">&quot;state&quot;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">all</span>([code, state]):<br>            <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.DBERR, <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;缺少code数据&#x27;</span>&#125;)<br>        user = is_master(request.user)<br>        useropenid, usernickname, userheadimgurl, userunionid = get_wechat_user(code)<br>        user.useropenid = useropenid<br>        user.usernickname = usernickname<br>        user.userheadimgurl = userheadimgurl<br>        user.userunionid = userunionid<br>        user.state = state<br>        user.save()<br>        <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.OK, <span class="hljs-string">&#x27;token&#x27;</span>: user.jwt_token, <span class="hljs-string">&#x27;mobile&#x27;</span>: user.mobile&#125;)<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>WeChat</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>微信登录-扫码绑定用户 一)</title>
    <link href="/2021/03/08/%E5%BE%AE%E4%BF%A1%E7%99%BB%E5%BD%95-2/"/>
    <url>/2021/03/08/%E5%BE%AE%E4%BF%A1%E7%99%BB%E5%BD%95-2/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="微信登录与绑定用户☟"><a href="#微信登录与绑定用户☟" class="headerlink" title="微信登录与绑定用户☟"></a><font color="#008080">微信登录与绑定用户☟</font></h2><p><strong><code>前情提要</code> <a href="#">☟</a></strong></p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json">用户使用手机号码登录后 校验是否已经绑定微信号<br>微信扫码登录的用户 校验是否已经绑定手机号码<br>本章使用: python3.6 django MySQL<br>微信扫码登陆 校验是否已经绑定微信/手机号码<br></code></pre></div></td></tr></table></figure><p><img src="https://p.pstatp.com/origin/137340002b9a1dcb33085" alt="流程图"></p><h2 id="校验是否已经绑定过手机号码-微信☟"><a href="#校验是否已经绑定过手机号码-微信☟" class="headerlink" title="校验是否已经绑定过手机号码/微信☟"></a><font color="#008080">校验是否已经绑定过手机号码/微信☟</font></h2><table><thead><tr><th>参数</th><th>值</th><th>备注</th><th>请求方式</th></tr></thead><tbody><tr><td>参考路由</td><td><a href="http://127.0.0.1:8000/WxOrUser/">http://127.0.0.1:8000/WxOrUser/</a></td><td>校验是否已经绑定过手机号码或微信</td><td>GET</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WeXinBindView</span>(<span class="hljs-params">APIView</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;校验是否已经绑定过微信--手机号&quot;&quot;&quot;</span><br>    authentication_classes = [MyBaseAuthentication, ]  <span class="hljs-comment"># jwt_token认证用户</span><br>    <br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get</span>(<span class="hljs-params">self, request</span>):</span><br>        user = is_master(request.user)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> re.match(<span class="hljs-string">r&#x27;^1[3-9]\d&#123;9&#125;$&#x27;</span>, user.mobile):<br>            <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.DBERR, <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;您的账号尚未绑定手机号,请先绑定手机号&#x27;</span>&#125;)<br>        <span class="hljs-keyword">elif</span> user.useropenid <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.DBERR, <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;您的账号尚未绑定微信,请先绑定微信&#x27;</span>&#125;)<br>        <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.OK&#125;)<br></code></pre></div></td></tr></table></figure><h2 id="微信登录成功–绑定手机号码☟"><a href="#微信登录成功–绑定手机号码☟" class="headerlink" title="微信登录成功–绑定手机号码☟"></a><font color="#008080">微信登录成功–绑定手机号码☟</font></h2><table><thead><tr><th>参数</th><th>值</th><th>备注</th><th>请求方式</th></tr></thead><tbody><tr><td>参考路由</td><td><a href="http://127.0.0.1:8000/wx_mobile/">http://127.0.0.1:8000/wx_mobile/</a></td><td>微信登录的用户-绑定手机号码</td><td>POST</td></tr><tr><td>mobile</td><td>13456789011</td><td>手机号码</td><td></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WeChatBindMobileView</span>(<span class="hljs-params">APIView</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;微信登录成功--绑定手机号码&quot;&quot;&quot;</span><br>    authentication_classes = [MyBaseAuthentication, ]  <span class="hljs-comment"># jwt_token认证用户</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">post</span>(<span class="hljs-params">self, request</span>):</span><br>        user = is_master(request.user)<br>        mobile = request.POST.get(<span class="hljs-string">&#x27;mobile&#x27;</span>)<br>        password = request.POST.get(<span class="hljs-string">&#x27;password&#x27;</span>)  <span class="hljs-comment"># 改密码将在用户手机号登录的时候使用</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">all</span>([mobile, password]):<br>            <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.PARAMERR, <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;缺少手机号或密码&#x27;</span>&#125;)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> re.match(<span class="hljs-string">r&#x27;^1[3-9]\d&#123;9&#125;$&#x27;</span>, mobile):<br>            <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.USERERR, <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;请输入正确的手机号码&#x27;</span>&#125;)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> re.match(<span class="hljs-string">r&#x27;^[0-9a-zA-Z]&#123;8,20&#125;$&#x27;</span>, password):<br>            <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.PWDERR, <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;请输入8-20位的数字字母密码&#x27;</span>&#125;)<br>        user.mobile = mobile<br>        user.password = make_password(password, <span class="hljs-string">&#x27;pbkdf2_sha256&#x27;</span>)<br>        user.save()<br>        <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.OK, <span class="hljs-string">&#x27;token&#x27;</span>: user.jwt_token, <span class="hljs-string">&#x27;mobile&#x27;</span>: mobile&#125;)<br></code></pre></div></td></tr></table></figure><h2 id="手机号登录成功–绑定微信号☟"><a href="#手机号登录成功–绑定微信号☟" class="headerlink" title="手机号登录成功–绑定微信号☟"></a><font color="#008080">手机号登录成功–绑定微信号☟</font></h2><table><thead><tr><th>参数</th><th>值</th><th>备注</th><th>请求方式</th></tr></thead><tbody><tr><td>参考路由</td><td><a href="http://127.0.0.1:8000/mobile_wx/">http://127.0.0.1:8000/mobile_wx/</a></td><td>手机号登录的用户–绑定微信号</td><td>GET</td></tr><tr><td>code</td><td>071xnUkl2wUPo64to1ol2MhKFY1xnUkZ</td><td>用户扫码后的code值</td><td></td></tr><tr><td>state</td><td>STATE</td><td>默认STATE</td><td></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MobileBindWeChatView</span>(<span class="hljs-params">APIView</span>):</span><br>    authentication_classes = [MyBaseAuthentication, ]  <span class="hljs-comment"># jwt_token认证用户</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get</span>(<span class="hljs-params">self, request</span>):</span><br>        code = request.GET.get(<span class="hljs-string">&#x27;code&#x27;</span>)  <span class="hljs-comment"># 获取code值</span><br>        state = request.GET.get(<span class="hljs-string">&quot;state&quot;</span>)<br>        user = is_master(request.user)<br><br>        myurl = <span class="hljs-string">&quot;https://api.weixin.qq.com/sns/oauth2/access_token?appid=&quot;</span> \<br>        + AppID + <span class="hljs-string">&quot;&amp;secret=&quot;</span> + AppSecret + <span class="hljs-string">&quot;&amp;code=&quot;</span> + code + <span class="hljs-string">&quot;&amp;grant_type=authorization_code&quot;</span><br><br>        request = Request(myurl)<br>        html = urlopen(request)<br>        <span class="hljs-comment"># 获取数据</span><br>        data = html.read()<br>        strs = json.loads(data.decode())<br>        mytoken = strs[<span class="hljs-string">&quot;access_token&quot;</span>]<br>        myrhtoken = strs[<span class="hljs-string">&quot;refresh_token&quot;</span>]<br>        myopenid = strs[<span class="hljs-string">&quot;openid&quot;</span>]<br>        myunionid = strs[<span class="hljs-string">&quot;unionid&quot;</span>]<br>        <span class="hljs-comment"># 获取用户信息的api接口</span><br>        mytwourl = <span class="hljs-string">&quot;https://api.weixin.qq.com/sns/userinfo?access_token=&quot;</span> + mytoken + <span class="hljs-string">&quot;&amp;openid=&quot;</span> + myopenid + <span class="hljs-string">&quot;&amp;lang=zh_CN&quot;</span><br>        request2 = Request(mytwourl)<br>        html2 = urlopen(request2)<br>        data2 = html2.read()<br>        strs2 = json.loads(data2.decode())<br>        <span class="hljs-comment"># 下面是获取扫码者微信帐号完整信息</span><br>        useropenid = strs2[<span class="hljs-string">&quot;openid&quot;</span>]<br>        usernickname = strs2[<span class="hljs-string">&quot;nickname&quot;</span>]<br>        userheadimgurl = strs2[<span class="hljs-string">&quot;headimgurl&quot;</span>]<br>        userunionid = strs2[<span class="hljs-string">&quot;unionid&quot;</span>]<br>        user.useropenid = useropenid<br>        user.usernickname = usernickname<br>        user.userheadimgurl = userheadimgurl<br>        user.userunionid = userunionid<br>        user.state = state<br>        user.save()<br><br>        <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.OK, <span class="hljs-string">&#x27;token&#x27;</span>: user.jwt_token, <span class="hljs-string">&#x27;mobile&#x27;</span>: user.mobile&#125;)<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>WeChat</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>微信登录-扫码登录</title>
    <link href="/2021/03/08/%E5%BE%AE%E4%BF%A1%E7%99%BB%E5%BD%95-1/"/>
    <url>/2021/03/08/%E5%BE%AE%E4%BF%A1%E7%99%BB%E5%BD%95-1/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="微信登录与绑定用户☟"><a href="#微信登录与绑定用户☟" class="headerlink" title="微信登录与绑定用户☟"></a><font color="#008080">微信登录与绑定用户☟</font></h2><p><strong><code>前情提要</code> <a href="#">☟</a></strong></p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json">用户使用手机号码登录后 校验是否已经绑定微信号<br>微信扫码登录的用户 校验是否已经绑定手机号码<br>本章使用: python3.6 django MySQL<br>微信扫码登陆流程与后端代码<br></code></pre></div></td></tr></table></figure><h2 id="微信扫码登录流程☟"><a href="#微信扫码登录流程☟" class="headerlink" title="微信扫码登录流程☟"></a><font color="#008080">微信扫码登录流程☟</font></h2><h3 id="☞-微信开放平台"><a href="#☞-微信开放平台" class="headerlink" title="☞ 微信开放平台"></a><a href="https://open.weixin.qq.com/cgi-bin/applist?t=manage/list&page=0&num=20&openapptype=1&lang=zh_CN&token=a40f5be463a14389f1c21ba201b68972d5b44dc6">☞ 微信开放平台</a></h3><h2 id="创建网站应用"><a href="#创建网站应用" class="headerlink" title="创建网站应用"></a><font color=" #66DD00">创建网站应用</font></h2><p><img src="https://p.pstatp.com/origin/ff6b000286106846991d" alt="创建网站应用"></p><h2 id="填写网站应用信息"><a href="#填写网站应用信息" class="headerlink" title="填写网站应用信息"></a><font color=" #66DD00">填写网站应用信息</font></h2><p><img src="https://p.pstatp.com/origin/13783000248ddf4318435" alt="填写网站应用信息"></p><h2 id="查看id与密钥"><a href="#查看id与密钥" class="headerlink" title="查看id与密钥"></a><font color=" #66DD00">查看id与密钥</font></h2><p><img src="https://p.pstatp.com/origin/1386c00040776e81450dd" alt="查看id与密钥"></p><h2 id="设置回调域"><a href="#设置回调域" class="headerlink" title="设置回调域"></a><font color=" #66DD00">设置回调域</font></h2><p><img src="https://p.pstatp.com/origin/1387c0000f4bfa737d7ff" alt="设置回调域"></p><h2 id="微信扫码登录-获取code值☟"><a href="#微信扫码登录-获取code值☟" class="headerlink" title="微信扫码登录-获取code值☟"></a><font color="#008080">微信扫码登录-获取code值☟</font></h2><table><thead><tr><th align="center">路由</th></tr></thead><tbody><tr><td align="center"><a href="https://open.weixin.qq.com/connect/qrconnect?appid=APPID&amp;redirect_uri=%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D&amp;response_type=code&amp;scope=snsapi_login&amp;state=STATE">https://open.weixin.qq.com/connect/qrconnect?appid=APPID&amp;redirect_uri=你自己的域名&amp;response_type=code&amp;scope=snsapi_login&amp;state=STATE</a></td></tr></tbody></table><table><thead><tr><th align="center">上述路由参数</th><th align="center">值</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">APPID</td><td align="center">刚刚获取到的appid</td><td align="center">appid</td></tr><tr><td align="center">redirect_uri</td><td align="center">http:// https://根据你的域名</td><td align="center">例如本地: <a href="http://127.0.0.1:8000/">http://127.0.0.1:8000</a></td></tr><tr><td align="center">response_type</td><td align="center">code</td><td align="center">默认值</td></tr><tr><td align="center">scope</td><td align="center">snsapi_login</td><td align="center">默认值</td></tr><tr><td align="center">state</td><td align="center">STATE</td><td align="center">默认值</td></tr></tbody></table><h2 id="微信扫码登录-获取access-token值☟"><a href="#微信扫码登录-获取access-token值☟" class="headerlink" title="微信扫码登录-获取access_token值☟"></a><font color="#008080">微信扫码登录-获取access_token值☟</font></h2><table><thead><tr><th align="center">路由</th></tr></thead><tbody><tr><td align="center"><a href="https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&amp;secret=SECRET&amp;code=CODE&amp;grant_type=authorization_code">https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&amp;secret=SECRET&amp;code=CODE&amp;grant_type=authorization_code</a></td></tr></tbody></table><table><thead><tr><th align="center">上述路由参数</th><th align="center">值</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">APPID</td><td align="center">appid</td><td align="center">appid</td></tr><tr><td align="center">SECRET</td><td align="center">密钥 网站应用的密钥</td><td align="center">密钥 网站应用的密钥</td></tr><tr><td align="center">CODE</td><td align="center">返回的code值</td><td align="center">微信扫码登录返回的code值</td></tr><tr><td align="center">grant_type</td><td align="center">authorization_code</td><td align="center">默认值</td></tr></tbody></table><p><strong><font color=" #66DD00">返回值:</font></strong></p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;access_token&quot;</span>: <span class="hljs-string">&quot;36_tzQMLluQGxWLvty7ivsqs7xpE3GvUzbgIrYyvldhAB_WDg3c-wB4-N6OP8uc-y************************************&quot;</span>,<br>  <span class="hljs-attr">&quot;expires_in&quot;</span>: <span class="hljs-number">7200</span>,<br>  <span class="hljs-attr">&quot;refresh_token&quot;</span>: <span class="hljs-string">&quot;36_S2uCpIM4dU9Z65uvn__PcD5UYp8_uPii97R04NSMItZs2keyuMp7zTkXzehYQ_tHNIPaE4Bh-oIp6cl********************&quot;</span>,<br>  <span class="hljs-attr">&quot;openid&quot;</span>: <span class="hljs-string">&quot;你的openid&quot;</span>,<br>  <span class="hljs-attr">&quot;scope&quot;</span>: <span class="hljs-string">&quot;snsapi_login&quot;</span>,<br>  <span class="hljs-attr">&quot;unionid&quot;</span>: <span class="hljs-string">&quot;你的unionid&quot;</span><br>&#125;<br><br># 上述返回值解析<br>access_token 包含扫码用户的信息<br>expires_in 超时时间(过期时间)<br>openid 就是确认是你扫码的<br></code></pre></div></td></tr></table></figure><h2 id="微信扫码登录-获取扫码用户的信息☟"><a href="#微信扫码登录-获取扫码用户的信息☟" class="headerlink" title="微信扫码登录-获取扫码用户的信息☟"></a><font color="#008080">微信扫码登录-获取扫码用户的信息☟</font></h2><table><thead><tr><th align="center">路由</th></tr></thead><tbody><tr><td align="center"><a href="https://api.weixin.qq.com/sns/userinfo?access_token=ACCESS_TOKEN&amp;openid=OPENID&amp;lang=zh_CN">https://api.weixin.qq.com/sns/userinfo?access_token=ACCESS_TOKEN&amp;openid=OPENID&amp;lang=zh_CN</a></td></tr></tbody></table><table><thead><tr><th align="center">上述路由参数</th><th align="center">值</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">access_token</td><td align="center">36_tzQMXXXXXXX</td><td align="center">前面获取的access_token</td></tr><tr><td align="center">openid</td><td align="center">openid</td><td align="center">前面获取的openid</td></tr></tbody></table><p><strong><font color=" #66DD00">返回值:</font></strong></p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;openid&quot;</span>: <span class="hljs-string">&quot;你的openid&quot;</span>,<br>  <span class="hljs-attr">&quot;nickname&quot;</span>: <span class="hljs-string">&quot;微信名字&quot;</span>,<br>  &quot;sex&quot;: 1, # 男女的意思<br>  &quot;language&quot;: &quot;zh_CN&quot;, # 中文<br>  &quot;city&quot;: &quot;Abiko-shi&quot;, # 城市<br>  &quot;province&quot;: &quot;Chiba-ken&quot;, # 乡镇 <br>  &quot;country&quot;: &quot;JP&quot;, # 日本<br>  &quot;headimgurl&quot;:&quot;http://thirdwx.qlogo.cn/mmopen/vi_32/dpF4rnCxdZ3VFjdnEEZ7J2e3hDJORNGibADyWavEeykwWnRnsGuP7dxkAPG70d8BFiagArJ69xy1wkxTG36m18bw/132&quot;, # 你的头像<br>  &quot;privilege&quot;: [<br><br>  ],<br>  &quot;unionid&quot;: &quot;你的unionid&quot;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="微信扫码登录-后端代码☟"><a href="#微信扫码登录-后端代码☟" class="headerlink" title="微信扫码登录-后端代码☟"></a><font color="#008080">微信扫码登录-后端代码☟</font></h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># 路由</span><br>url(<span class="hljs-string">r&#x27;^wx_login/$&#x27;</span>, WeXinLogin.as_view()),  <span class="hljs-comment"># 获取微信登录 code值</span><br><br><span class="hljs-comment"># 对应的视图函数</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WeXinLogin</span>(<span class="hljs-params">APIView</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get</span>(<span class="hljs-params">self, request</span>):</span><br>        code = request.GET.get(<span class="hljs-string">&#x27;code&#x27;</span>)  <span class="hljs-comment"># 获取code值</span><br>        state = request.GET.get(<span class="hljs-string">&quot;state&quot;</span>)<br><br>        myurl = <span class="hljs-string">&quot;https://api.weixin.qq.com/sns/oauth2/access_token?appid=&quot;</span> + AppID + <span class="hljs-string">&quot;&amp;secret=&quot;</span> + AppSecret + <span class="hljs-string">&quot;&amp;code=&quot;</span> + code + <span class="hljs-string">&quot;&amp;grant_type=authorization_code&quot;</span><br><br>        request = Request(myurl)<br>        html = urlopen(request)<br>        <span class="hljs-comment"># 获取数据</span><br>        data = html.read()<br>        strs = json.loads(data.decode())<br>        mytoken = strs[<span class="hljs-string">&quot;access_token&quot;</span>]<br>        myrhtoken = strs[<span class="hljs-string">&quot;refresh_token&quot;</span>]<br>        myopenid = strs[<span class="hljs-string">&quot;openid&quot;</span>]<br>        myunionid = strs[<span class="hljs-string">&quot;unionid&quot;</span>]<br>        <span class="hljs-comment"># 获取用户信息的api接口</span><br>        mytwourl = <span class="hljs-string">&quot;https://api.weixin.qq.com/sns/userinfo?access_token=&quot;</span> + mytoken + <span class="hljs-string">&quot;&amp;openid=&quot;</span> + myopenid + <span class="hljs-string">&quot;&amp;lang=zh_CN&quot;</span><br>        request2 = Request(mytwourl)<br>        html2 = urlopen(request2)<br>        data2 = html2.read()<br>        strs2 = json.loads(data2.decode())<br>        <span class="hljs-comment"># 下面是获取扫码者微信帐号完整信息</span><br>        useropenid = strs2[<span class="hljs-string">&quot;openid&quot;</span>]<br>        usernickname = strs2[<span class="hljs-string">&quot;nickname&quot;</span>]<br>        userheadimgurl = strs2[<span class="hljs-string">&quot;headimgurl&quot;</span>]<br>        userunionid = strs2[<span class="hljs-string">&quot;unionid&quot;</span>]<br><br>        user = User.objects.<span class="hljs-built_in">filter</span>(useropenid=useropenid)<br>        <span class="hljs-keyword">if</span> user.count() &lt;= <span class="hljs-number">0</span>:<br>            is_login = User.objects.create_user(useropenid=useropenid,<br>                                                usernickname=usernickname,<br>                                                userheadimgurl=userheadimgurl,<br>                                                userunionid=userunionid,<br>                                                username=usernickname,<br>                                                password=userunionid,<br>                                                mobile=usernickname,<br>                                                mystate=state)<br>            jwt_payload_handler = api_settings.JWT_PAYLOAD_HANDLER<br>            jwt_encode_handler = api_settings.JWT_ENCODE_HANDLER<br>            payload = jwt_payload_handler(is_login)<br>            token = jwt_encode_handler(payload)<br>            User.objects.<span class="hljs-built_in">filter</span>(username=is_login).update(jwt_token=token)<br>            <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.OK, <span class="hljs-string">&#x27;mobile&#x27;</span>: usernickname, <span class="hljs-string">&#x27;token&#x27;</span>: token&#125;)<br>        is_login = User.objects.get(useropenid=useropenid)<br>        jwt_payload_handler = api_settings.JWT_PAYLOAD_HANDLER<br>        jwt_encode_handler = api_settings.JWT_ENCODE_HANDLER<br>        payload = jwt_payload_handler(is_login)<br>        token = jwt_encode_handler(payload)<br>        User.objects.<span class="hljs-built_in">filter</span>(useropenid=useropenid).update(jwt_token=token)<br>        <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.OK, <span class="hljs-string">&quot;token&quot;</span>: token, <span class="hljs-string">&#x27;mobile&#x27;</span>: is_login.username&#125;)<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>WeChat</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>微信支付-后端VIEW</title>
    <link href="/2021/03/08/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-3/"/>
    <url>/2021/03/08/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-3/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="WeChat-Pay"><a href="#WeChat-Pay" class="headerlink" title="WeChat Pay"></a><font color=" DeepSkyBlue ">WeChat Pay</font></h2><p><font color="  LimeGreen "><a href="https://pay.weixin.qq.com/wiki/doc/api/index.html">微信开发文档</a></font></p><h2 id="配置路由与文件路径"><a href="#配置路由与文件路径" class="headerlink" title="配置路由与文件路径"></a><font color=" DeepSkyBlue ">配置路由与文件路径</font></h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;wechatPay URL Configuration</span><br><span class="hljs-string"></span><br><span class="hljs-string">The `urlpatterns` list routes URLs to views. For more information please see:</span><br><span class="hljs-string">    https://docs.djangoproject.com/en/1.11/topics/http/urls/</span><br><span class="hljs-string">Examples:</span><br><span class="hljs-string">Function views</span><br><span class="hljs-string">    1. Add an import:  from my_app import views</span><br><span class="hljs-string">    2. Add a URL to urlpatterns:  url(r&#x27;^$&#x27;, views.home, name=&#x27;home&#x27;)</span><br><span class="hljs-string">Class-based views</span><br><span class="hljs-string">    1. Add an import:  from other_app.views import Home</span><br><span class="hljs-string">    2. Add a URL to urlpatterns:  url(r&#x27;^$&#x27;, Home.as_view(), name=&#x27;home&#x27;)</span><br><span class="hljs-string">Including another URLconf</span><br><span class="hljs-string">    1. Import the include() function: from django.conf.urls import url, include</span><br><span class="hljs-string">    2. Add a URL to urlpatterns:  url(r&#x27;^blog/&#x27;, include(&#x27;blog.urls&#x27;))</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">from</span> django.conf.urls <span class="hljs-keyword">import</span> url, include<br><span class="hljs-keyword">from</span> django.contrib <span class="hljs-keyword">import</span> admin<br><br>urlpatterns = [<br>    url(<span class="hljs-string">r&#x27;^admin/&#x27;</span>, admin.site.urls),<br>    url(<span class="hljs-string">r&#x27;^&#x27;</span>, include(<span class="hljs-string">&#x27;pay.urls&#x27;</span>))<br>]<br><br></code></pre></div></td></tr></table></figure><p><font color="  LimeGreen ">在子应用当中 新建urls.py</font></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.conf.urls <span class="hljs-keyword">import</span> url<br><span class="hljs-keyword">from</span> . <span class="hljs-keyword">import</span> views<br><br>urlpatterns = [<br>    url(<span class="hljs-string">r&#x27;^$&#x27;</span>, views.index), <span class="hljs-comment"># 主页面</span><br>    url(<span class="hljs-string">r&#x27;^pay&#x27;</span>, views.pay), <span class="hljs-comment"># 微信支付的接口</span><br>    url(<span class="hljs-string">r&#x27;^result&#x27;</span>, views.result), <span class="hljs-comment"># 微信支付成功之后 回调函数</span><br>    url(<span class="hljs-string">r&#x27;websocketLink/(?P&lt;out_trade_no&gt;\w+)&#x27;</span>, views.websocketLink)  <span class="hljs-comment"># webSocket 链接</span><br>]<br><br></code></pre></div></td></tr></table></figure><p><font color="  LimeGreen ">配置一下模板文件的访问</font></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">TEMPLATES = [<br>    &#123;<br>        <span class="hljs-string">&#x27;BACKEND&#x27;</span>: <span class="hljs-string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,<br>        <span class="hljs-string">&#x27;DIRS&#x27;</span>: [os.path.join(BASE_DIR, <span class="hljs-string">&#x27;templates&#x27;</span>)],<br>        <span class="hljs-string">&#x27;APP_DIRS&#x27;</span>: <span class="hljs-literal">True</span>,<br>        <span class="hljs-string">&#x27;OPTIONS&#x27;</span>: &#123;<br>            <span class="hljs-string">&#x27;context_processors&#x27;</span>: [<br>                <span class="hljs-string">&#x27;django.template.context_processors.debug&#x27;</span>,<br>                <span class="hljs-string">&#x27;django.template.context_processors.request&#x27;</span>,<br>                <span class="hljs-string">&#x27;django.contrib.auth.context_processors.auth&#x27;</span>,<br>                <span class="hljs-string">&#x27;django.contrib.messages.context_processors.messages&#x27;</span>,<br>            ],<br>        &#125;,<br>    &#125;,<br>]<br></code></pre></div></td></tr></table></figure><h2 id="返回主页面及settings配置"><a href="#返回主页面及settings配置" class="headerlink" title="返回主页面及settings配置"></a><font color=" DeepSkyBlue ">返回主页面及settings配置</font></h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>(<span class="hljs-params">request</span>):</span><br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;index.html&#x27;</span>)<br></code></pre></div></td></tr></table></figure><p><font color="  LimeGreen ">在子应用当中新建pay_setting.py 配置一下微信支付需要的数据</font></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">APP_ID = <span class="hljs-string">&quot;wx**********&quot;</span>  <span class="hljs-comment"># 微信公众号ID</span><br>MCH_ID = <span class="hljs-string">&quot;1*********&quot;</span>  <span class="hljs-comment"># 商户号ID</span><br>API_KEY = <span class="hljs-string">&quot;8**************************c&quot;</span>  <span class="hljs-comment"># APK密钥(在商户平台里--&gt;&gt;API密钥里面设置)(建议 关于密钥都设置成统一的 好记)</span><br>UFDOOER_URL = <span class="hljs-string">&quot;https://api.mch.weixin.qq.com/pay/unifiedorder&quot;</span>  <span class="hljs-comment"># 微信统一下单地址 默认的</span><br><span class="hljs-comment"># 注意 内网穿透的地址是只能维持几个小时的 如果时间到了 请自行重启</span><br>NOTIFY_URL = <span class="hljs-string">&quot;http://t4knvu.natappfree.cc/result&quot;</span>  <span class="hljs-comment"># 回调，可使用内网穿透工具进行测试</span><br>CREATE_IP = <span class="hljs-string">&quot;127.0.0.1&quot;</span>  <span class="hljs-comment"># 服务器的公网IP 测试使用本地</span><br><br></code></pre></div></td></tr></table></figure><h2 id="微信支付-扫码接口与回调函数"><a href="#微信支付-扫码接口与回调函数" class="headerlink" title="微信支付 扫码接口与回调函数"></a><font color=" DeepSkyBlue ">微信支付 扫码接口与回调函数</font></h2><table><thead><tr><th>参数</th><th>值</th><th>备注</th><th>请求方式</th></tr></thead><tbody><tr><td>参考路由</td><td><a href="http://127.0.0.1:8000/pay/">http://127.0.0.1:8000/pay/</a></td><td>微信扫码支付的第一步 扫码</td><td>GET</td></tr><tr><td>body</td><td>xxx微信支付</td><td>商品描述</td><td></td></tr><tr><td>total_fee</td><td>Aswce67249198721</td><td>订单号</td><td></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">pay</span>(<span class="hljs-params">request</span>):</span><br>    body = <span class="hljs-string">&#x27;payTest&#x27;</span>  <span class="hljs-comment"># 商品描述</span><br>    total_fee = <span class="hljs-number">1</span>  <span class="hljs-comment"># 付款金额，单位是分，必须是整数</span><br>    out_trade_no = create_orderId(<span class="hljs-number">5</span>) <span class="hljs-comment"># 这是一个自定义的函数 目的是生成订单号</span><br>    data_dict = wxpay(body, total_fee, out_trade_no)  <span class="hljs-comment"># 这是一个自定义的函数</span><br>    <span class="hljs-keyword">if</span> data_dict.get(<span class="hljs-string">&#x27;return_code&#x27;</span>) == <span class="hljs-string">&#x27;SUCCESS&#x27;</span>:<br>        code_url = get_code_url(data_dict) <span class="hljs-comment"># 这是一个自定义函数,目的是获取支付二维码的地址</span><br>        img = create_image(code_url) <span class="hljs-comment"># 创建支付二维码的图片</span><br>        qrcode_name = out_trade_no + <span class="hljs-string">&#x27;wxpay.png&#x27;</span> <span class="hljs-comment"># 订单号加后缀 作为图片</span><br>        img.save(<span class="hljs-string">r&#x27;static&#x27;</span> + <span class="hljs-string">&#x27;/&#x27;</span> + qrcode_name) <span class="hljs-comment"># 保存图片</span><br>        <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;qrcode.html&#x27;</span>, &#123;<span class="hljs-string">&#x27;qrcode_name&#x27;</span>: qrcode_name, <span class="hljs-string">&#x27;out_trade_no&#x27;</span>: out_trade_no&#125;) <span class="hljs-comment"># 前端获取返回的订单号 轮询订单是否支付完成</span><br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&#x27;index.html&#x27;</span>, &#123;<span class="hljs-string">&#x27;err_msg&#x27;</span>: <span class="hljs-string">&#x27;获取微信的code_url失败&#x27;</span>&#125;)<br></code></pre></div></td></tr></table></figure><p><font color="  LimeGreen ">上述的视图,如果支付成功 就走支付成功的回调函数</font></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">result</span>(<span class="hljs-params">request</span>):</span><br>    data_dict = trans_xml_to_dict(request.body)  <span class="hljs-comment"># 回调数据转字典</span><br>    <span class="hljs-comment"># print(&#x27;支付回调结果&#x27;, data_dict)</span><br>    sign = data_dict.pop(<span class="hljs-string">&#x27;sign&#x27;</span>)  <span class="hljs-comment"># 取出签名</span><br>    back_sign = get_sign(data_dict, API_KEY)  <span class="hljs-comment"># 计算签名</span><br>    <span class="hljs-comment"># 验证签名是否与回调签名相同</span><br>    <span class="hljs-keyword">if</span> sign == back_sign <span class="hljs-keyword">and</span> data_dict[<span class="hljs-string">&#x27;return_code&#x27;</span>] == <span class="hljs-string">&#x27;SUCCESS&#x27;</span>:<br>        <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">        检查对应业务数据的状态，判断该通知是否已经处理过，如果没有处理过再进行处理，如果处理过直接返回结果成功。</span><br><span class="hljs-string">        &#x27;&#x27;&#x27;</span><br>        print(<span class="hljs-string">&#x27;微信支付成功会回调！&#x27;</span>)<br>        <span class="hljs-comment"># 处理支付成功逻辑，向前端页面发送实时消息</span><br>        out_trade_no = data_dict[<span class="hljs-string">&#x27;out_trade_no&#x27;</span>]<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        此处可做支付成功后的业务逻辑</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        send(out_trade_no, <span class="hljs-string">&#x27;支付成功&#x27;</span>) <span class="hljs-comment"># 返回前端的消息</span><br>        <span class="hljs-comment"># 返回接收结果给微信，否则微信会每隔8分钟发送post请求</span><br>        <span class="hljs-keyword">return</span> HttpResponse(trans_dict_to_xml(&#123;<span class="hljs-string">&#x27;return_code&#x27;</span>: <span class="hljs-string">&#x27;SUCCESS&#x27;</span>, <span class="hljs-string">&#x27;return_msg&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>&#125;))<br>    <span class="hljs-keyword">return</span> HttpResponse(trans_dict_to_xml(&#123;<span class="hljs-string">&#x27;return_code&#x27;</span>: <span class="hljs-string">&#x27;FAIL&#x27;</span>, <span class="hljs-string">&#x27;return_msg&#x27;</span>: <span class="hljs-string">&#x27;SIGNERROR&#x27;</span>&#125;))<br></code></pre></div></td></tr></table></figure><h2 id="前端轮询支付状态"><a href="#前端轮询支付状态" class="headerlink" title="前端轮询支付状态"></a><font color=" DeepSkyBlue ">前端轮询支付状态</font></h2><p><font color="  LimeGreen ">返回前端的消息</font></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">clients = &#123;&#125;  <span class="hljs-comment"># 创建一个空字典，用于保存所有接入的用户地址</span><br><br><br><span class="hljs-meta">@accept_websocket</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">websocketLink</span>(<span class="hljs-params">request, out_trade_no</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;连接websocket&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> request.is_websocket:<br>        lock = threading.RLock()  <span class="hljs-comment"># rlock线程锁</span><br>        <span class="hljs-keyword">try</span>:<br>            lock.acquire()  <span class="hljs-comment"># 抢占资源</span><br>            clients[out_trade_no] = request.websocket<br>            <span class="hljs-comment"># 监听接收客户端发送的消息 或者 客户端断开连接</span><br>            <span class="hljs-keyword">for</span> message <span class="hljs-keyword">in</span> request.websocket:<br>                <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> message:<br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-keyword">else</span>:<br>                    request.websocket.send(message)<br>        <span class="hljs-keyword">finally</span>:<br>            <span class="hljs-comment"># 释放锁</span><br>            lock.release()<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">send</span>(<span class="hljs-params">out_trade_no, msg</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;服务端发送消息&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> clients[out_trade_no]:<br>            clients[out_trade_no].send(msg.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>            <span class="hljs-comment"># 支付结果发送给前端页面后，该连接使命就完成了，前端页面会关闭该链接，这里需要当前连接的记录</span><br>            <span class="hljs-keyword">del</span> clients[out_trade_no]<br>    <span class="hljs-keyword">except</span> BaseException:<br>        print(<span class="hljs-string">&#x27;发送消息出错了...&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h2 id="Utils-工具包"><a href="#Utils-工具包" class="headerlink" title="Utils 工具包"></a><font color=" DeepSkyBlue ">Utils 工具包</font></h2><p><font color="  LimeGreen ">上述的视图,内部所需的函数 自定义工具包</font></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> Random<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">from</span> pay.pay_setting <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> qrcode<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">random_str</span>(<span class="hljs-params">randomlength=<span class="hljs-number">8</span></span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    生成随机字符串</span><br><span class="hljs-string">    :param randomlength: 字符串长度</span><br><span class="hljs-string">    :return:</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-built_in">str</span> = <span class="hljs-string">&#x27;&#x27;</span><br>    chars = <span class="hljs-string">&#x27;AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789&#x27;</span><br>    length = <span class="hljs-built_in">len</span>(chars) - <span class="hljs-number">1</span><br>    random = Random()<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(randomlength):<br>        <span class="hljs-built_in">str</span> += chars[random.randint(<span class="hljs-number">0</span>, length)]<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">create_orderId</span>(<span class="hljs-params">length</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    生成扫码订单号</span><br><span class="hljs-string">    :param length: 自定义长度</span><br><span class="hljs-string">    :return:</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    local_time = time.strftime(<span class="hljs-string">&#x27;%Y%m%d%H%M%S&#x27;</span>, time.localtime(time.time()))<br>    out_trade_no = random_str(length) + local_time<br>    <span class="hljs-keyword">return</span> out_trade_no<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_sign</span>(<span class="hljs-params">data_dict, key</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    签名函数</span><br><span class="hljs-string">    :param data_dict: 需要签名的参数，格式为字典</span><br><span class="hljs-string">    :param key: 密钥 ，即上面的API_KEY</span><br><span class="hljs-string">    :return: 字符串</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    params_list = <span class="hljs-built_in">sorted</span>(data_dict.items(), key=<span class="hljs-keyword">lambda</span> e: e[<span class="hljs-number">0</span>], reverse=<span class="hljs-literal">False</span>)  <span class="hljs-comment"># 参数字典倒排序为列表</span><br>    params_str = <span class="hljs-string">&quot;&amp;&quot;</span>.join(<span class="hljs-string">u&quot;&#123;&#125;=&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(k, v) <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> params_list) + <span class="hljs-string">&#x27;&amp;key=&#x27;</span> + key<br>    <span class="hljs-comment"># 组织参数字符串并在末尾添加商户交易密钥</span><br>    md5 = hashlib.md5()  <span class="hljs-comment"># 使用MD5加密模式</span><br>    md5.update(params_str.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))  <span class="hljs-comment"># 将参数字符串传入</span><br>    sign = md5.hexdigest().upper()  <span class="hljs-comment"># 完成加密并转为大写</span><br>    <span class="hljs-keyword">return</span> sign<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">trans_dict_to_xml</span>(<span class="hljs-params">data_dict</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    定义字典转XML的函数</span><br><span class="hljs-string">    :param data_dict:</span><br><span class="hljs-string">    :return:</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    data_xml = []<br>    <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">sorted</span>(data_dict.keys()):  <span class="hljs-comment"># 遍历字典排序后的key</span><br>        v = data_dict.get(k)  <span class="hljs-comment"># 取出字典中key对应的value</span><br>        <span class="hljs-keyword">if</span> k == <span class="hljs-string">&#x27;detail&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-keyword">not</span> v.startswith(<span class="hljs-string">&#x27;&lt;![CDATA[&#x27;</span>):  <span class="hljs-comment"># 添加XML标记</span><br>            v = <span class="hljs-string">&#x27;&lt;![CDATA[&#123;&#125;]]&gt;&#x27;</span>.<span class="hljs-built_in">format</span>(v)<br>        data_xml.append(<span class="hljs-string">&#x27;&lt;&#123;key&#125;&gt;&#123;value&#125;&lt;/&#123;key&#125;&gt;&#x27;</span>.<span class="hljs-built_in">format</span>(key=k, value=v))<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;xml&gt;&#123;&#125;&lt;/xml&gt;&#x27;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;&#x27;</span>.join(data_xml))  <span class="hljs-comment"># 返回XML</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">trans_xml_to_dict</span>(<span class="hljs-params">data_xml</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    定义XML转字典的函数</span><br><span class="hljs-string">    :param data_xml:</span><br><span class="hljs-string">    :return:</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    soup = BeautifulSoup(data_xml, features=<span class="hljs-string">&#x27;xml&#x27;</span>)<br>    xml = soup.find(<span class="hljs-string">&#x27;xml&#x27;</span>)  <span class="hljs-comment"># 解析XML</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> xml:<br>        <span class="hljs-keyword">return</span> &#123;&#125;<br>    data_dict = <span class="hljs-built_in">dict</span>([(item.name, item.text) <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> xml.find_all()])<br>    <span class="hljs-keyword">return</span> data_dict<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wxpay</span>(<span class="hljs-params">body, total_fee, out_trade_no</span>):</span><br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    向微信发出请求，并获取返回的xml，将该xml转为字典</span><br><span class="hljs-string">    :return:</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    <span class="hljs-comment"># random_str自定义的函数</span><br>    nonce_str = random_str(<span class="hljs-number">20</span>)  <span class="hljs-comment"># 拼接出随机的字符串即可，我这里是用  时间+随机数字+5个随机字母</span><br>    params = &#123;<br>        <span class="hljs-string">&#x27;appid&#x27;</span>: APP_ID,  <span class="hljs-comment"># APPID</span><br>        <span class="hljs-string">&#x27;mch_id&#x27;</span>: MCH_ID,  <span class="hljs-comment"># 商户号</span><br>        <span class="hljs-string">&#x27;nonce_str&#x27;</span>: nonce_str,  <span class="hljs-comment"># 随机字符串</span><br>        <span class="hljs-string">&#x27;out_trade_no&#x27;</span>: out_trade_no,  <span class="hljs-comment"># 订单编号，可自定义</span><br>        <span class="hljs-string">&#x27;total_fee&#x27;</span>: total_fee,  <span class="hljs-comment"># 订单总金额</span><br>        <span class="hljs-string">&#x27;spbill_create_ip&#x27;</span>: CREATE_IP,  <span class="hljs-comment"># 自己服务器的IP地址</span><br>        <span class="hljs-string">&#x27;notify_url&#x27;</span>: NOTIFY_URL,  <span class="hljs-comment"># 回调地址，微信支付成功后会回调这个url，告知商户支付结果</span><br>        <span class="hljs-string">&#x27;body&#x27;</span>: body,  <span class="hljs-comment"># 商品描述</span><br>        <span class="hljs-string">&#x27;trade_type&#x27;</span>: <span class="hljs-string">&#x27;NATIVE&#x27;</span>,  <span class="hljs-comment"># 扫码支付类型</span><br>    &#125;<br>    sign = get_sign(params, API_KEY)  <span class="hljs-comment"># 获取签名</span><br>    params[<span class="hljs-string">&#x27;sign&#x27;</span>] = sign  <span class="hljs-comment"># 添加签名到参数字典</span><br>    xml = trans_dict_to_xml(params)  <span class="hljs-comment"># 转换字典为XML</span><br>    <span class="hljs-comment"># 以POST方式向微信公众平台服务器发起请求</span><br>    response = requests.request(<span class="hljs-string">&#x27;post&#x27;</span>, <span class="hljs-string">&#x27;https://api.mch.weixin.qq.com/pay/unifiedorder&#x27;</span>, data=xml)<br>    data_dict = trans_xml_to_dict(response.content)  <span class="hljs-comment"># 将请求返回的数据转为字典</span><br>    <span class="hljs-keyword">return</span> data_dict<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_code_url</span>(<span class="hljs-params">data_dict</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    从微信返回的数据中提取出二维码字符串</span><br><span class="hljs-string">    :param data_dict: 字典数据</span><br><span class="hljs-string">    :return: 二维码链接</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    code_url = data_dict.get(<span class="hljs-string">&#x27;code_url&#x27;</span>)<br>    <span class="hljs-keyword">return</span> code_url<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">create_image</span>(<span class="hljs-params">code_url</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    将传进来的二维码链接转换为二维码图片</span><br><span class="hljs-string">    :param code_url: 二维码链接</span><br><span class="hljs-string">    :return: 二维码图片</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    img = qrcode.make(code_url)<br>    <span class="hljs-keyword">return</span> img<br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>WeChat</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>微信支付-前端HTML</title>
    <link href="/2021/03/08/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-2/"/>
    <url>/2021/03/08/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-2/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="WeChatPay☟"><a href="#WeChatPay☟" class="headerlink" title=" WeChatPay☟"></a><font color=" DeepSkyBlue "> WeChatPay☟</font></h2><p><strong><code>前情提要</code> <a href="#">☟</a></strong></p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx">本章使用: Python3.6 django MySQL<br>项目使用微信支付 购买会员 django+pc端<br></code></pre></div></td></tr></table></figure><h2 id="使用django创建项目"><a href="#使用django创建项目" class="headerlink" title="使用django创建项目"></a><font color=" DeepSkyBlue ">使用django创建项目</font></h2><p><strong>Django 安装</strong></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">pip install django==<span class="hljs-number">1.11</span><span class="hljs-number">.11</span><br></code></pre></div></td></tr></table></figure><p><strong>Django 创建项目</strong></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">django-admin startproject WeChatPay<br></code></pre></div></td></tr></table></figure><p><strong>Django 创建好项目后 新建一个子应用</strong></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">python manage.py startapp pay<br></code></pre></div></td></tr></table></figure><p><strong>项目目录结构</strong></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">├── WeChatPay<br>│├── pay        <span class="hljs-comment"># 子应用(包)</span><br>││├── __init__.py<br>││├── models.py  <span class="hljs-comment"># 模型类</span><br>││├── test.py<br>││├── views.py <span class="hljs-comment"># 视图函数</span><br>│├── templates  <span class="hljs-comment"># 模板文件的文件夹 html</span><br>│├── static     <span class="hljs-comment"># 静态资源文件夹 例如js css等</span><br>│├── WeChatPay  <span class="hljs-comment"># 跟项目同名的文件夹</span><br>││   ├── __init__.py<br>││   ├── settings <span class="hljs-comment"># 配置文件的位置</span><br>││   ├── urls.py  <span class="hljs-comment"># 全局路由</span><br>││   └── wsgi.py<br>│├── manage.py<br></code></pre></div></td></tr></table></figure><p><strong>在跟项目同名下的 settings.py文件里面 配置子应用</strong></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">INSTALLED_APPS = [<br>    <span class="hljs-string">&#x27;...&#x27;</span>,<br>    <span class="hljs-string">&#x27;pay&#x27;</span>,  <span class="hljs-comment"># 微信支付</span><br>    <span class="hljs-string">&#x27;...&#x27;</span><br>]<br><br>MIDDLEWARE = [<br>    <span class="hljs-string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,<br>    <span class="hljs-comment">#&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,</span><br>    <span class="hljs-string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,<br>]<br><br><span class="hljs-comment"># 配置静态资源的请求</span><br>STATIC_URL = <span class="hljs-string">&#x27;/static/&#x27;</span><br>STATICFILES_DIRS = (<br>    os.path.join(os.path.join(BASE_DIR, <span class="hljs-string">&#x27;static&#x27;</span>)),<br>)<br></code></pre></div></td></tr></table></figure><h2 id="配置前端文件"><a href="#配置前端文件" class="headerlink" title="配置前端文件"></a><font color=" DeepSkyBlue ">配置前端文件</font></h2><p><strong>在templates里面新建index.html</strong></p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>    &lt;title&gt;微信支付&lt;/title&gt;<br>    &lt;style&gt;<br><br>        .main_div&#123;<br>            width: 320px;<br>            height: 150px;<br>            text-align: center;<br>            margin:<span class="hljs-number">0</span> auto;<br>            margin-top: 100px;<br>            border: aquamarine 2px solid;<br>            border-radius: 5px;<br>        &#125;<br>    &lt;/style&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br><br>    &lt;div class=&quot;main_div&quot;&gt;<br>        &lt;br&gt;<br>        &lt;h1&gt;进行微信支付测试？&lt;/h1&gt;<br>        &lt;a href=&quot;pay&quot;&gt;确定&lt;/a&gt;<br>    &lt;/div&gt;<br><br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></div></td></tr></table></figure><p><strong>在templates里面新建qrcode.html</strong></p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">&lt;!DOCTYPE html&gt;<br>&lt;html lang=<span class="hljs-string">&quot;zh-CN&quot;</span>&gt;<br><br>&lt;head&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>    &lt;title&gt;扫码支付&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;style&gt;<br>    .box &#123;<br>        position: absolute;<br>        left: <span class="hljs-number">50</span>%;<br>        top: <span class="hljs-number">10</span>%;<br>        transform: translate(-<span class="hljs-number">50</span>%);<br>        text-align: center;<br>    &#125;<br>    .conten &#123;<br>        width: <span class="hljs-number">100</span>%;<br>    &#125;<br>    body &#123;<br>        background: <span class="hljs-comment">#ccc;</span><br>    &#125;<br>&lt;/style&gt;<br>&lt;body&gt;<br>    &#123;% load staticfiles %&#125;<br>    &lt;div class=&quot;box&quot;&gt;<br>        &lt;h2 class=&quot;content&quot;&gt;&lt;span&gt;扫码支付&lt;/span&gt;&lt;/h2&gt;<br>        &lt;h5&gt;订单号：&lt;span id=&quot;out_trade_no&quot;&gt;&#123;&#123; out_trade_no &#125;&#125;&lt;/span&gt;&lt;/h5&gt;<br>        &lt;!--&lt;h2&gt;扫码支付&lt;/h2&gt;--&gt;<br>        &lt;img src=&quot;&#123;% static qrcode_name %&#125;&quot;/&gt;&lt;!--显示支付二维码--&gt;<br>        &lt;br&gt;<br>        &lt;span id=&quot;message&quot;&gt;&lt;/span&gt;<br>    &lt;/div&gt;<br><br>&lt;/body&gt;<br><br>&lt;script <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;<br>var websocket = null;//websocket 的变量<br>function load() &#123;//初始化 websocket<br>//获取订单号<br>var out_trade_no = <span class="hljs-string">&quot;&#123;&#123; out_trade_no &#125;&#125;&quot;</span>;<br>//建立连接<br><span class="hljs-keyword">if</span> (<span class="hljs-string">&#x27;WebSocket&#x27;</span> <span class="hljs-keyword">in</span> window) &#123;//支持 websocket<br>            // 此处为获取支付是否成功<br>websocket = new WebSocket(<span class="hljs-string">&quot;ws://localhost:80/websocketLink/&quot;</span> + out_trade_no);<br>websocket.onopen = function() &#123;<br>fillData(<span class="hljs-string">&quot;请在两小时内完成支付&quot;</span>)<br>&#125;<br>websocket.onclose = function() &#123;<br>fillData(<span class="hljs-string">&quot;连接关闭了&quot;</span>)<br>&#125;<br>websocket.onerror = function() &#123;<br>fillData(<span class="hljs-string">&quot;出现错误了&quot;</span>)<br>&#125;<br>websocket.onmessage = function(event) &#123;<br>fillData(event.data);<br>alert(<span class="hljs-string">&quot;支付成功！！！&quot;</span>);<br><span class="hljs-keyword">if</span> (window.s) &#123;<br>                    window.s.close();//关闭websocket<br>                    console.log(<span class="hljs-string">&#x27;websocket已关闭&#x27;</span>);<br>                &#125;<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>alert(<span class="hljs-string">&quot;浏览器不支持 websocket&quot;</span>)<br>&#125;<br>//设置监听,当有消息来的时候的监听<br>&#125;<br>function fillData(data) &#123;<br>document.getElementById(<span class="hljs-string">&quot;message&quot;</span>).innerHTML = data;<br>&#125;<br>window.onload=load();//页面加载完成后执行 load 方法<br>&lt;/script&gt;<br>&lt;/html&gt;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>WeChat</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>微信支付获取开发者id 密钥</title>
    <link href="/2021/03/08/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-1/"/>
    <url>/2021/03/08/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-1/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="WeChatPay"><a href="#WeChatPay" class="headerlink" title=" WeChatPay"></a><font color=" DeepSkyBlue "> WeChatPay</font></h2><p><font color="  LimeGreen ">TIP: 微信支付所需 接口</font></p><h2 id="微信公众号平台"><a href="#微信公众号平台" class="headerlink" title="微信公众号平台"></a><font color=" DeepSkyBlue ">微信公众号平台</font></h2><p><font color="  LimeGreen "><a href="https://mp.weixin.qq.com/cgi-bin/loginpage">点击跳转</a></font></p><p><img src="https://external-30160.picsz.qpic.cn/bd4cb6e93c877366ff14e87d6054c18d" alt="微信公众号链接"></p><p>首先在右上角那里 交300认证一下–&gt;认证完成后–&gt;在左边基本配置那里</p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json">公众号开发信息<br>开发者ID(AppID) wxxxxxxx58<br><br>开发者ID是公众号开发识别码，配合开发者密码可调用公众号的接口能力。<br><br>开发者密码(AppSecret)重置 <br>开发者密码是校验公众号开发者身份的密码，具有极高的安全性。切记勿把密码直接交给第三方开发者或直接存储在代码中。如需第三方代开发公众号，请使用授权方式接入。<br><br>IP白名单查看<br>通过开发者ID及密码调用获取access_token接口时，需要设置访问来源IP为白名单。了解更多。<br></code></pre></div></td></tr></table></figure><p><font color="  LimeGreen ">TIP: 获取开发者ID(AppID)</font></p><p><font color="  LimeGreen ">TIP: 获取开发者密码(AppSecret)</font></p><p><font color="  LimeGreen ">TIP: 设置IP白名单 注意我们是需要access_token的 多看看介绍</font></p><h2 id="微信商户平台"><a href="#微信商户平台" class="headerlink" title="微信商户平台"></a><font color=" DeepSkyBlue ">微信商户平台</font></h2><p><font color="  LimeGreen "><a href="https://pay.weixin.qq.com/index.php/core/home/login?return_url=/">点击跳转</a></font></p><p><img src="https://external-30160.picsz.qpic.cn/a8db422486a3587709896a5b9a52c7d4" alt="微信支付平台"></p><p>商户号: 16xxxxxx</p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json">个人信息<br>账号信息<br>登录账号:    注意这就是你的商户号<br><br>账号角色:    超级管理员<br>创建时间:    2020年8月5日 17:23:43<br>绑定微信号:  f**********25更换绑定<br>基本信息修改<br>姓      名:  xxx<br>联系手机:     188**********<br>联系邮箱:     19*******@qq.com<br><br>安全信息<br>操作密码:     修改<br>预留信息:     未设置修改<br>预留信息是由你自己设置的一段文字，用来鉴定网站身份，防止假冒网站造成损失。<br><br>配置后将在首页及充值页面显示。若未看到预留信息，表明当前访问的网站存在风险，请终止操作，并修改密码。<br><br>未安装操作证书时预留信息将被部分掩码。<br></code></pre></div></td></tr></table></figure><p><font color="  LimeGreen ">基本都是一些配置 例如:在API安全里面配置密钥那些</font></p><p><img src="https://external-30160.picsz.qpic.cn/6dc041cfda52a130cf4708ec6874fc74" alt="API安全配置密钥"></p><p><font color="  LimeGreen ">然后在产品中心 获取你所需要的产品</font></p><p><img src="https://external-30160.picsz.qpic.cn/837b4a928d0af1243603eb249342a58c"></p><p><font color="  LimeGreen ">上述红框 都是一些微信支付的接口 仔细看一下内部的文档</font></p><p><font color="  LimeGreen ">最后就是 如果自己就是超级管理员(申请账号的人的微信 扫码登录)</font></p><p><img src="https://external-30160.picsz.qpic.cn/e75176c01f2c104dc41a185be966a28f"></p><p><font color="  LimeGreen ">上述就是 配置支付的关联 微信的指引已经写的很明白了</font></p>]]></content>
    
    
    <categories>
      
      <category>WeChat</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Jwt_token的认证与生成</title>
    <link href="/2021/03/08/Jwt_token/"/>
    <url>/2021/03/08/Jwt_token/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="JWT的简单使用"><a href="#JWT的简单使用" class="headerlink" title="JWT的简单使用"></a><font color="#00ffff">JWT的简单使用</font></h2><h2 id="TIP-安装模块-jwt是一个第三方模块"><a href="#TIP-安装模块-jwt是一个第三方模块" class="headerlink" title="TIP:安装模块 jwt是一个第三方模块"></a><font color=" LimeGreen ">TIP:安装模块 jwt是一个第三方模块</font></h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">pip install djangorestframework-jwt -i https://pypi.douban.com/simple/<br></code></pre></div></td></tr></table></figure><h2 id="TIP-JWT的使用-一-自定义返回的"><a href="#TIP-JWT的使用-一-自定义返回的" class="headerlink" title="TIP:JWT的使用 (一) 自定义返回的"></a><font color=" LimeGreen ">TIP:JWT的使用 (一) 自定义返回的</font></h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># settings.py 里面配置一下</span><br><br>REST_FRAMEWORK = &#123;<br>    <span class="hljs-comment"># 引入JWT认证机制，当客户端将jwt token传递给服务器之后</span><br>    <span class="hljs-comment"># 此认证机制会自动校验jwt token的有效性，无效会直接返回401(未认证错误)</span><br>    <span class="hljs-string">&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;</span>: (<br>        <span class="hljs-string">&#x27;rest_framework_jwt.authentication.JSONWebTokenAuthentication&#x27;</span>,<br>        <span class="hljs-string">&#x27;rest_framework.authentication.SessionAuthentication&#x27;</span>,<br>        <span class="hljs-string">&#x27;rest_framework.authentication.BasicAuthentication&#x27;</span>,<br>    ),<br>    <span class="hljs-string">&#x27;PAGE_SIZE&#x27;</span>: <span class="hljs-number">100</span>,  <span class="hljs-comment"># 显示多少数据</span><br>    <span class="hljs-string">&#x27;DEFAULT_PAGINATION_CLASS&#x27;</span>: <span class="hljs-string">&#x27;rest_framework.pagination.PageNumberPagination&#x27;</span>,  <span class="hljs-comment"># 防止跳出 警告</span><br>&#125;<br><br><span class="hljs-comment"># JWT扩展配置</span><br>JWT_AUTH = &#123;<br>    <span class="hljs-comment"># 重新定义jwt认证成功后返回的数据 days(天) hours(时) minutes(分)</span><br>    <span class="hljs-string">&#x27;JWT_EXPIRATION_DELTA&#x27;</span>: datetime.timedelta(days=<span class="hljs-number">1</span>),  <span class="hljs-comment"># 定义token过期时间1天</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="TIP-手动生成-JWT-token"><a href="#TIP-手动生成-JWT-token" class="headerlink" title="TIP: 手动生成 JWT token"></a><font color=" LimeGreen ">TIP: 手动生成 JWT token</font></h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># 该方法 在后面会用!!!</span><br><br><span class="hljs-keyword">from</span> rest_framework_jwt.settings <span class="hljs-keyword">import</span> api_settings<br><br>jwt_payload_handler = api_settings.JWT_PAYLOAD_HANDLER<br>jwt_encode_handler = api_settings.JWT_ENCODE_HANDLER<br><br>payload = jwt_payload_handler(user)<br>token = jwt_encode_handler(payload)<br></code></pre></div></td></tr></table></figure><h2 id="TIP-子应用—模型类—views-py"><a href="#TIP-子应用—模型类—views-py" class="headerlink" title="TIP: 子应用—模型类—views.py"></a><font color=" LimeGreen ">TIP: 子应用—模型类—views.py</font></h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># models.py</span><br><br><span class="hljs-keyword">from</span> django.contrib.auth.models <span class="hljs-keyword">import</span> AbstractUser<br><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> models<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span>(<span class="hljs-params">AbstractUser</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;自定义用户模型类&quot;&quot;&quot;</span><br>    mobile = models.CharField(max_length=<span class="hljs-number">11</span>, unique=<span class="hljs-literal">True</span>, verbose_name=<span class="hljs-string">&#x27;Mobile&#x27;</span>)<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Meta</span>:</span><br>        db_table = <span class="hljs-string">&#x27;tb_users&#x27;</span><br>        verbose_name = <span class="hljs-string">&#x27;用户&#x27;</span><br>        verbose_name_plural = verbose_name<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__str__</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-keyword">return</span> self.username<br><br></code></pre></div></td></tr></table></figure><h2 id="TIP-子应用里的-urls-py"><a href="#TIP-子应用里的-urls-py" class="headerlink" title="TIP: 子应用里的 urls.py"></a><font color=" LimeGreen ">TIP: 子应用里的 urls.py</font></h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># urls.py</span><br><br><span class="hljs-comment"># coding:utf-8</span><br><span class="hljs-keyword">from</span> django.conf.urls <span class="hljs-keyword">import</span> url<br><br><span class="hljs-keyword">from</span> apps.user.views <span class="hljs-keyword">import</span> *<br><br>app_name = <span class="hljs-string">&#x27;user&#x27;</span><br>urlpatterns = [<br>    url(<span class="hljs-string">r&#x27;^register/$&#x27;</span>, RegisterView.as_view()),  <span class="hljs-comment"># 用户注册接口</span><br>    url(<span class="hljs-string">r&#x27;^mobiles/$&#x27;</span>, MobileCountView.as_view()),  <span class="hljs-comment"># 校验手机号码是否注册过</span><br>    url(<span class="hljs-string">r&#x27;^login/$&#x27;</span>, AdminAuthorizeView.as_view()),  <span class="hljs-comment"># 用户jwt认证接口</span><br>]<br></code></pre></div></td></tr></table></figure><h2 id="TIP-views-py"><a href="#TIP-views-py" class="headerlink" title="TIP: views.py "></a><font color=" LimeGreen ">TIP: views.py </font></h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><span class="hljs-keyword">import</span> re<br><br><span class="hljs-keyword">from</span> django <span class="hljs-keyword">import</span> http<br><span class="hljs-keyword">from</span> django.contrib.auth <span class="hljs-keyword">import</span> authenticate, login<br><span class="hljs-keyword">from</span> django.views <span class="hljs-keyword">import</span> View<br><span class="hljs-keyword">from</span> django_redis <span class="hljs-keyword">import</span> get_redis_connection<br><span class="hljs-keyword">from</span> pymysql <span class="hljs-keyword">import</span> DatabaseError<br><span class="hljs-keyword">from</span> rest_framework.response <span class="hljs-keyword">import</span> Response<br><span class="hljs-keyword">from</span> rest_framework.views <span class="hljs-keyword">import</span> APIView<br><span class="hljs-keyword">from</span> rest_framework_jwt.settings <span class="hljs-keyword">import</span> api_settings<br><br><span class="hljs-keyword">from</span> apps.user.models <span class="hljs-keyword">import</span> User<br><span class="hljs-keyword">from</span> utils.response_code <span class="hljs-keyword">import</span> RET<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AdminAuthorizeView</span>(<span class="hljs-params">APIView</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">post</span>(<span class="hljs-params">self, request</span>):</span><br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        登录</span><br><span class="hljs-string">        :param request:</span><br><span class="hljs-string">        :return:</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        username = request.POST.get(<span class="hljs-string">&#x27;username&#x27;</span>)<br>        password = request.POST.get(<span class="hljs-string">&#x27;password&#x27;</span>)<br><br>        <span class="hljs-keyword">if</span> username <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> password <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-number">500</span>, <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;请求参数错误&#x27;</span>&#125;)<br><br>        is_login = authenticate(request, username=username, password=password)<br>        <span class="hljs-keyword">if</span> is_login <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-number">500</span>, <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;账号或密码错误&#x27;</span>&#125;)<br><br>        login(request, is_login) <span class="hljs-comment"># 保存登录状态 但没必要 因为已经是 jwt认证了</span><br><span class="hljs-comment">### 此处为生成 token 的地方 ###</span><br>        jwt_payload_handler = api_settings.JWT_PAYLOAD_HANDLER<br>        jwt_encode_handler = api_settings.JWT_ENCODE_HANDLER<br>        payload = jwt_payload_handler(is_login)<br>        token = jwt_encode_handler(payload)<br>        <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.OK, <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&quot;登录成功&quot;</span>, <span class="hljs-string">&quot;token&quot;</span>: token&#125;)<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RegisterView</span>(<span class="hljs-params">APIView</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">post</span>(<span class="hljs-params">self, request</span>):</span><br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        注册</span><br><span class="hljs-string">        :param request:</span><br><span class="hljs-string">        :return:</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        password = request.POST.get(<span class="hljs-string">&#x27;password&#x27;</span>)<br>        mobile = request.POST.get(<span class="hljs-string">&#x27;mobile&#x27;</span>)<br>        <span class="hljs-comment"># 短信验证码</span><br>        <span class="hljs-comment"># sms_code = request.POST.get(&#x27;sms_code&#x27;)</span><br><br>        <span class="hljs-comment"># 判断参数是否齐全</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">all</span>([password, mobile]):<br>            <span class="hljs-keyword">return</span> http.HttpResponseBadRequest(<span class="hljs-string">&#x27;缺少必传参数&#x27;</span>)<br>        <span class="hljs-comment"># 判断密码是否是8-20个数字</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> re.match(<span class="hljs-string">r&#x27;^[0-9A-Za-z]&#123;8,20&#125;$&#x27;</span>, password):<br>            <span class="hljs-keyword">return</span> http.HttpResponseBadRequest(<span class="hljs-string">&#x27;请输入8-20位的密码&#x27;</span>)<br>        <span class="hljs-comment"># 判断手机号是否合法</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> re.match(<span class="hljs-string">r&#x27;^1[3-9]\d&#123;9&#125;$&#x27;</span>, mobile):<br>            <span class="hljs-keyword">return</span> http.HttpResponseBadRequest(<span class="hljs-string">&#x27;请输入正确的手机号码&#x27;</span>)<br><br>        <span class="hljs-comment"># redis_conn = get_redis_connection(&#x27;code&#x27;)</span><br>        <span class="hljs-comment"># sms_code_saved = redis_conn.get(&#x27;sms_%s&#x27; % mobile)</span><br>        <span class="hljs-comment"># if sms_code_saved is None:</span><br>        <span class="hljs-comment">#    return Response(&#123;&#x27;code&#x27;: RET.NODATA, &#x27;errmsg&#x27;: &#x27;无效的验证码&#x27;&#125;)</span><br>        <span class="hljs-comment"># if sms_code != sms_code_saved.decode():</span><br>        <span class="hljs-comment">#    return Response(&#123;&#x27;code&#x27;: RET.DATAERR, &#x27;errmsg&#x27;: &#x27;验证码输入错误&#x27;&#125;)</span><br><br>        <span class="hljs-keyword">try</span>:<br>            User.objects.create_user(username=mobile, password=password, mobile=mobile)<br>        <span class="hljs-keyword">except</span> DatabaseError:<br>            <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.DBERR, <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;注册失败&#x27;</span>&#125;)<br><br>        <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.OK, <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&quot;完成注册&quot;</span>&#125;)<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MobileCountView</span>(<span class="hljs-params">View</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get</span>(<span class="hljs-params">self, request</span>):</span><br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        校验手机号码是否重复注册</span><br><span class="hljs-string">        :param request:</span><br><span class="hljs-string">        :return:</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        mobile = request.GET.get(<span class="hljs-string">&#x27;mobile&#x27;</span>)<br>        count = User.objects.<span class="hljs-built_in">filter</span>(mobile=mobile).count()<br>        <span class="hljs-keyword">return</span> http.JsonResponse(&#123;<span class="hljs-string">&#x27;code&#x27;</span>: RET.OK, <span class="hljs-string">&#x27;count&#x27;</span>: count&#125;)<br><br></code></pre></div></td></tr></table></figure><h2 id="前端返回token后-后端校验token"><a href="#前端返回token后-后端校验token" class="headerlink" title="前端返回token后,后端校验token"></a><font color="#00ffff">前端返回token后,后端校验token</font></h2><h2 id="TIP-安装cors"><a href="#TIP-安装cors" class="headerlink" title="TIP:安装cors"></a><font color=" LimeGreen ">TIP:安装cors</font></h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">pip install django-cors-headers<br></code></pre></div></td></tr></table></figure><h2 id="TIP-前后端分离-会有跨域的问题-并且-没有使用到-COOKIES-SESSIONS"><a href="#TIP-前后端分离-会有跨域的问题-并且-没有使用到-COOKIES-SESSIONS" class="headerlink" title="TIP: 前后端分离 会有跨域的问题 并且 没有使用到 COOKIES SESSIONS"></a><font color=" LimeGreen ">TIP: 前后端分离 会有跨域的问题 并且 没有使用到 COOKIES SESSIONS</font></h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># settings.py</span><br>INSTALLED_APPS = [<br>    <span class="hljs-string">&#x27;django.contrib.admin&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.auth&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.contenttypes&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.sessions&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.messages&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.staticfiles&#x27;</span>,<br>    <span class="hljs-string">&#x27;rest_framework&#x27;</span>,<br>    <span class="hljs-string">&#x27;apps.user&#x27;</span>,  <span class="hljs-comment"># user</span><br>    <span class="hljs-string">&#x27;corsheaders&#x27;</span>,  <span class="hljs-comment"># 跨域</span><br>]<br><br>MIDDLEWARE = [<br>    <span class="hljs-string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span>,  <span class="hljs-comment"># 跨域</span><br>    <span class="hljs-string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,<br>]<br><br><span class="hljs-comment"># 跨域增加忽略</span><br>CORS_ALLOW_CREDENTIALS = <span class="hljs-literal">True</span>  <span class="hljs-comment"># 允许携带cookie</span><br>CORS_ORIGIN_ALLOW_ALL = <span class="hljs-literal">True</span><br><span class="hljs-comment"># 设置允许的请求</span><br>CORS_ALLOW_METHODS = (<br>    <span class="hljs-string">&#x27;DELETE&#x27;</span>,<br>    <span class="hljs-string">&#x27;GET&#x27;</span>,<br>    <span class="hljs-string">&#x27;OPTIONS&#x27;</span>,<br>    <span class="hljs-string">&#x27;PATCH&#x27;</span>,<br>    <span class="hljs-string">&#x27;POST&#x27;</span>,<br>    <span class="hljs-string">&#x27;PUT&#x27;</span>,<br>    <span class="hljs-string">&#x27;VIEW&#x27;</span>,<br>)<br><span class="hljs-comment"># 设置允许的header</span><br>CORS_ALLOW_HEADERS = (<br>    <span class="hljs-string">&#x27;XMLHttpRequest&#x27;</span>,<br>    <span class="hljs-string">&#x27;X_FILENAME&#x27;</span>,<br>    <span class="hljs-string">&#x27;accept-encoding&#x27;</span>,<br>    <span class="hljs-string">&#x27;authorization&#x27;</span>,<br>    <span class="hljs-string">&#x27;content-type&#x27;</span>,<br>    <span class="hljs-string">&#x27;dnt&#x27;</span>,<br>    <span class="hljs-string">&#x27;origin&#x27;</span>,<br>    <span class="hljs-string">&#x27;user-agent&#x27;</span>,<br>    <span class="hljs-string">&#x27;x-csrftoken&#x27;</span>,<br>    <span class="hljs-string">&#x27;x-requested-with&#x27;</span>,<br>    <span class="hljs-string">&#x27;Pragma&#x27;</span>,<br>)<br><br></code></pre></div></td></tr></table></figure><h2 id="TIP-自定义基于jwt的权限类-第一种方法"><a href="#TIP-自定义基于jwt的权限类-第一种方法" class="headerlink" title=" TIP: 自定义基于jwt的权限类 (第一种方法)"></a><font color=" LimeGreen "> TIP: 自定义基于jwt的权限类 (第一种方法)</font></h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># 新建一个auth.py 用于认证用户是否登录 在一些需要登录后才能访问的视图做校验</span><br><br><span class="hljs-keyword">from</span> rest_framework.authentication <span class="hljs-keyword">import</span> BaseAuthentication<br><span class="hljs-keyword">from</span> rest_framework_jwt.authentication <span class="hljs-keyword">import</span> jwt_decode_handler<br><span class="hljs-keyword">from</span> rest_framework.exceptions <span class="hljs-keyword">import</span> AuthenticationFailed<br><span class="hljs-keyword">import</span> jwt<br><span class="hljs-keyword">from</span> apps.user.models <span class="hljs-keyword">import</span> User<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyBaseAuthentication</span>(<span class="hljs-params">BaseAuthentication</span>):</span><br>    <span class="hljs-comment"># 重写authenticate</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">authenticate</span>(<span class="hljs-params">self, request</span>):</span><br>        <span class="hljs-comment"># 获取token的第二部分</span><br>        jwt_value = request.META.get(<span class="hljs-string">&#x27;HTTP_AUTHORIZATION&#x27;</span>)<br>        <span class="hljs-comment"># 注意此处为 postman 的时候请求 会带有 Bearer 所以使用了切割字符串</span><br>        jwt_value = jwt_value.split()[<span class="hljs-number">1</span>]  <span class="hljs-comment"># 浏览器请求头上传的时候 可以将此句注释掉</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> jwt_value:<br>            <span class="hljs-comment"># 如果没有就抛异常</span><br>            <span class="hljs-keyword">raise</span> AuthenticationFailed(<span class="hljs-string">&#x27;您没有携带认证信息&#x27;</span>)<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-comment"># 将token反解成用户信息字典</span><br>            payload = jwt_decode_handler(jwt_value)<br>        <span class="hljs-keyword">except</span> jwt.ExpiredSignature:<br>            <span class="hljs-keyword">raise</span> AuthenticationFailed(<span class="hljs-string">&#x27;认证超时&#x27;</span>)<br>        <span class="hljs-keyword">except</span> jwt.InvalidTokenError:<br>            <span class="hljs-keyword">raise</span> AuthenticationFailed(<span class="hljs-string">&#x27;非法用户&#x27;</span>)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-keyword">raise</span> AuthenticationFailed(<span class="hljs-built_in">str</span>(e))<br>        <span class="hljs-comment"># 直接返回对象 不查库，速度快些（只能获取传入的参数的值）</span><br>        <span class="hljs-comment"># user = User(id=payload.get(&#x27;user_id&#x27;), username=payload.get(&#x27;username&#x27;))</span><br>        <span class="hljs-comment"># 去数据库中查找获取user对象（能获取的字段更多）</span><br>        user = User.objects.<span class="hljs-built_in">filter</span>(pk=payload.get(<span class="hljs-string">&#x27;user_id&#x27;</span>)).first()<br>        <span class="hljs-keyword">return</span> user, jwt_value<br></code></pre></div></td></tr></table></figure><h2 id="TIP-自定义基于jwt的权限类-第二种方法"><a href="#TIP-自定义基于jwt的权限类-第二种方法" class="headerlink" title="TIP: 自定义基于jwt的权限类 (第二种方法) "></a><font color=" LimeGreen ">TIP: 自定义基于jwt的权限类 (第二种方法) </font></h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> rest_framework.authentication <span class="hljs-keyword">import</span> BaseAuthentication<br><span class="hljs-keyword">from</span> rest_framework_jwt.authentication <span class="hljs-keyword">import</span> BaseJSONWebTokenAuthentication<br><span class="hljs-keyword">from</span> rest_framework_jwt.authentication <span class="hljs-keyword">import</span> jwt_decode_handler<br><span class="hljs-keyword">from</span> rest_framework.exceptions <span class="hljs-keyword">import</span> AuthenticationFailed<br><span class="hljs-keyword">import</span> jwt<br><br><span class="hljs-comment"># 继承BaseJSONWebTokenAuthentication，重写父类的authenticate方法</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyToken</span>(<span class="hljs-params">BaseJSONWebTokenAuthentication</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">authenticate</span>(<span class="hljs-params">self, request</span>):</span><br>        <span class="hljs-comment"># 获取token的第二部分</span><br>        jwt_value = request.META.get(<span class="hljs-string">&#x27;HTTP_AUTHORIZATION&#x27;</span>)<br>        print(jwt_value)<br>        <span class="hljs-comment"># 判断get请求头中是否携带token，如果没有就是游客模式，直接返回None</span><br><br>        <span class="hljs-keyword">if</span> jwt_value <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-comment"># 将token数据进行decode解码后得到payload（用户信息字典），如果token超时或者错误，就会抛出异常</span><br>            payload = jwt_decode_handler(jwt_value)<br>            <span class="hljs-comment"># token = jwt_encode_handler(payload) 获取token</span><br>        <span class="hljs-keyword">except</span> jwt.ExpiredSignature:<br>            <span class="hljs-keyword">raise</span> AuthenticationFailed(<span class="hljs-string">&#x27;认证超时&#x27;</span>)<br>        <span class="hljs-keyword">except</span> jwt.InvalidTokenError:<br>            <span class="hljs-keyword">raise</span> AuthenticationFailed(<span class="hljs-string">&#x27;非法用户&#x27;</span>)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-keyword">raise</span> AuthenticationFailed(<span class="hljs-built_in">str</span>(e))<br>        <span class="hljs-comment"># 将用户信息字典传入，内部会查询数据库返回user对象</span><br>        user = self.authenticate_credentials(payload)<br>        <span class="hljs-comment"># 最后返回两个参数，一个是user对象，另一个是token（也可以是其他数据看你自己要返回啥）</span><br>        <span class="hljs-keyword">return</span> user, jwt_value<br></code></pre></div></td></tr></table></figure><h2 id="TIP-使用POSTman-测试"><a href="#TIP-使用POSTman-测试" class="headerlink" title="TIP: 使用POSTman 测试"></a><font color=" LimeGreen ">TIP: 使用POSTman 测试</font></h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SearchCateGoryView</span>(<span class="hljs-params">APIView</span>):</span><br>    <span class="hljs-comment"># authentication_classes = [MyToken, ]</span><br>    <span class="hljs-comment">### 自定义认证 JWT 方法</span><br>    authentication_classes = [MyBaseAuthentication, ]<br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get</span>(<span class="hljs-params">self,request</span>):</span><br>        data = <span class="hljs-string">&#x27;get方法&#x27;</span><br>        <span class="hljs-keyword">return</span> Response(&#123;<span class="hljs-string">&quot;code&quot;</span>:<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-string">&#x27;message&#x27;</span>:data&#125;)<br></code></pre></div></td></tr></table></figure><p><font color=" LimeGreen ">TIP: 当然 还有序列化器实现的</font></p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>技术杂谈</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
